ARM GAS  /tmp/ccFOYGRW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c"
  20              		.section	.text.TIM_OC1_SetConfig,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	TIM_OC1_SetConfig:
  27              	.LVL0:
  28              	.LFB239:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @file    stm32f4xx_hal_tim.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief   TIM HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          functionalities of the Timer (TIM) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Time Base Initialization
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Time Base Start
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Time Base Start Interruption
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Time Base Start DMA
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Output Compare/PWM Initialization
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Output Compare/PWM Channel Configuration
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start Interruption
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Output Compare/PWM Start DMA
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Input Capture Initialization
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Input Capture Channel Configuration
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Input Capture Start
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Input Capture Start Interruption
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Input Capture Start DMA
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM One Pulse Initialization
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM One Pulse Channel Configuration
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM One Pulse Start
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Encoder Interface Initialization
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Encoder Interface Start
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Encoder Interface Start Interruption
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM Encoder Interface Start DMA
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + Commutation Event configuration with Interruption and DMA
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM OCRef clear configuration
ARM GAS  /tmp/ccFOYGRW.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *           + TIM External Clock configuration
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ******************************************************************************
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @attention
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * Copyright (c) 2016 STMicroelectronics.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * All rights reserved.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * in the root directory of this software component.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ******************************************************************************
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   @verbatim
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       ##### TIMER Generic features #####
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..] The Timer features include:
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (#) 16-bit up, down, up/down auto-reload counter.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (#) 16-bit programmable prescaler allowing dividing (also on the fly) the
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            counter clock frequency either by any factor between 1 and 65536.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (#) Up to 4 independent channels for:
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Input Capture
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Output Compare
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) PWM generation (Edge and Center-aligned Mode)
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) One-pulse mode output
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (#) Synchronization circuit to control the timer with external signals and to interconnect
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             several timers together.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (#) Supports incremental encoder for positioning purposes
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             ##### How to use this driver #####
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) Initialize the TIM low level resources by implementing the following functions
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          depending on the selected feature:
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_MspInit()
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Input Capture : HAL_TIM_IC_MspInit()
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_MspInit()
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_MspInit()
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_MspInit()
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) Initialize the TIM low level resources :
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE();
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         (##) TIM pins configuration
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) The external Clock can be configured, if needed (the default clock is the
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          internal clock from the APBx), using the following function:
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          any start function.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) Configure the TIM in the desired functioning mode using one of the
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        Initialization function of this driver:
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_Base_Init: to use the Timer to generate a simple time base
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_OC_Init and HAL_TIM_OC_ConfigChannel: to use the Timer to generate an
ARM GAS  /tmp/ccFOYGRW.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             Output Compare signal.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_PWM_Init and HAL_TIM_PWM_ConfigChannel: to use the Timer to generate a
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             PWM signal.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_IC_Init and HAL_TIM_IC_ConfigChannel: to use the Timer to measure an
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             external signal.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_OnePulse_Init and HAL_TIM_OnePulse_ConfigChannel: to use the Timer
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             in One Pulse Mode.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****        (++) HAL_TIM_Encoder_Init: to use the Timer Encoder Interface.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) Activate the TIM peripheral using one of the start functions depending from the feature us
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_Start(), HAL_TIM_Base_Start_DMA(), HAL_TIM_Base_Start_IT()
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Input Capture :  HAL_TIM_IC_Start(), HAL_TIM_IC_Start_DMA(), HAL_TIM_IC_Start_IT()
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_Start(), HAL_TIM_OC_Start_DMA(), HAL_TIM_OC_Start_IT()
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_Start(), HAL_TIM_PWM_Start_DMA(), HAL_TIM_PWM_Start_IT
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_Start(), HAL_TIM_OnePulse_Start_IT()
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_Start(), HAL_TIM_Encoder_Start_DMA(), HAL_TIM
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      (#) The DMA Burst is managed with the two following functions:
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          HAL_TIM_DMABurst_WriteStart()
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****          HAL_TIM_DMABurst_ReadStart()
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     *** Callback registration ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   =============================================
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   The compilation define  USE_HAL_TIM_REGISTER_CALLBACKS when set to 1
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   allows the user to configure dynamically the driver callbacks.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   Use Function HAL_TIM_RegisterCallback() to register a callback.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_RegisterCallback() takes as parameters the HAL peripheral handle,
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   the Callback ID and a pointer to the user callback function.
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   Use function HAL_TIM_UnRegisterCallback() to reset a callback to the default
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   weak function.
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_UnRegisterCallback takes as parameters the HAL peripheral handle,
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   and the Callback ID.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   These functions allow to register/unregister following callbacks:
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Base_MspInitCallback              : TIM Base Msp Init Callback.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Base_MspDeInitCallback            : TIM Base Msp DeInit Callback.
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) IC_MspInitCallback                : TIM IC Msp Init Callback.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) IC_MspDeInitCallback              : TIM IC Msp DeInit Callback.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) OC_MspInitCallback                : TIM OC Msp Init Callback.
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) OC_MspDeInitCallback              : TIM OC Msp DeInit Callback.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PWM_MspInitCallback               : TIM PWM Msp Init Callback.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PWM_MspDeInitCallback             : TIM PWM Msp DeInit Callback.
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) OnePulse_MspInitCallback          : TIM One Pulse Msp Init Callback.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) OnePulse_MspDeInitCallback        : TIM One Pulse Msp DeInit Callback.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Encoder_MspInitCallback           : TIM Encoder Msp Init Callback.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Encoder_MspDeInitCallback         : TIM Encoder Msp DeInit Callback.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) HallSensor_MspInitCallback        : TIM Hall Sensor Msp Init Callback.
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) HallSensor_MspDeInitCallback      : TIM Hall Sensor Msp DeInit Callback.
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PeriodElapsedCallback             : TIM Period Elapsed Callback.
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PeriodElapsedHalfCpltCallback     : TIM Period Elapsed half complete Callback.
ARM GAS  /tmp/ccFOYGRW.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) TriggerCallback                   : TIM Trigger Callback.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) TriggerHalfCpltCallback           : TIM Trigger half complete Callback.
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) IC_CaptureCallback                : TIM Input Capture Callback.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) IC_CaptureHalfCpltCallback        : TIM Input Capture half complete Callback.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) OC_DelayElapsedCallback           : TIM Output Compare Delay Elapsed Callback.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PWM_PulseFinishedCallback         : TIM PWM Pulse Finished Callback.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) PWM_PulseFinishedHalfCpltCallback : TIM PWM Pulse Finished half complete Callback.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) ErrorCallback                     : TIM Error Callback.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) CommutationCallback               : TIM Commutation Callback.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) CommutationHalfCpltCallback       : TIM Commutation half complete Callback.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) BreakCallback                     : TIM Break Callback.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** By default, after the Init and when the state is HAL_TIM_STATE_RESET
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** all interrupt callbacks are set to the corresponding weak functions:
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   examples HAL_TIM_TriggerCallback(), HAL_TIM_ErrorCallback().
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   Exception done for MspInit and MspDeInit functions that are reset to the legacy weak
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   functionalities in the Init / DeInit only when these callbacks are null
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   (not registered beforehand). If not, MspInit or MspDeInit are not null, the Init / DeInit
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     keep and use the user MspInit / MspDeInit callbacks(registered beforehand)
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     Callbacks can be registered / unregistered in HAL_TIM_STATE_READY state only.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     Exception done MspInit / MspDeInit that can be registered / unregistered
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     in HAL_TIM_STATE_READY or HAL_TIM_STATE_RESET state,
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     thus registered(user) MspInit / DeInit callbacks can be used during the Init / DeInit.
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   In that case first register the MspInit/MspDeInit user callbacks
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       using HAL_TIM_RegisterCallback() before calling DeInit or Init function.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       When The compilation define USE_HAL_TIM_REGISTER_CALLBACKS is set to 0 or
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       not defined, the callback registration feature is not available and all callbacks
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       are set to the corresponding weak functions.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   @endverbatim
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ******************************************************************************
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Includes ------------------------------------------------------------------*/
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #include "stm32f4xx_hal.h"
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @addtogroup STM32F4xx_HAL_Driver
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM TIM
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief TIM HAL module driver
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #ifdef HAL_TIM_MODULE_ENABLED
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Private typedef -----------------------------------------------------------*/
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Private define ------------------------------------------------------------*/
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/ccFOYGRW.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Private variables ---------------------------------------------------------*/
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Private function prototypes -----------------------------------------------*/
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @addtogroup TIM_Private_Functions
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource);
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma);
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma);
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma);
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma);
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                   const TIM_SlaveConfigTypeDef *sSlaveConfig);
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /* Exported functions --------------------------------------------------------*/
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions TIM Exported Functions
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group1 TIM Time Base functions
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    Time Base functions
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****               ##### Time Base functions #####
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides functions allowing to:
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Initialize and configure the TIM base.
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) De-initialize the TIM base.
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the Time Base.
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the Time Base.
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the Time Base and enable interrupt.
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the Time Base and disable interrupt.
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the Time Base and enable DMA transfer.
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the Time Base and disable DMA transfer.
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Time base Unit according to the specified
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initialize the associated handle.
ARM GAS  /tmp/ccFOYGRW.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->Base_MspInitCallback == NULL)
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Base_MspInitCallback = HAL_TIM_Base_MspInit;
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Base_MspInitCallback(htim);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Time Base configuration */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM channels state */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
ARM GAS  /tmp/ccFOYGRW.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM Base peripheral
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_DeInit(TIM_HandleTypeDef *htim)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->Base_MspDeInitCallback == NULL)
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Base_MspDeInitCallback = HAL_TIM_Base_MspDeInit;
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Base_MspDeInitCallback(htim);
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM channels state */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Base MSP.
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
ARM GAS  /tmp/ccFOYGRW.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_Base_MspInit could be implemented in the user file
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM Base MSP.
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim)
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_Base_MspDeInit could be implemented in the user file
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Base generation.
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM state */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State != HAL_TIM_STATE_READY)
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Base generation.
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in interrupt mode.
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM state */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State != HAL_TIM_STATE_READY)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the TIM Update interrupt */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
ARM GAS  /tmp/ccFOYGRW.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in interrupt mode.
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Update interrupt */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in DMA mode.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData The source Buffer address.
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to peripheral.
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_DMA(TIM_HandleTypeDef *htim, const uint32_t *pData, uint16_t L
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the DMA Period elapsed callbacks */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the DMA error callback */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the DMA stream */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->A
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Return error status */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the TIM Update DMA request */
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in DMA mode.
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_DMA(TIM_HandleTypeDef *htim)
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
ARM GAS  /tmp/ccFOYGRW.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group2 TIM Output Compare functions
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM Output Compare functions
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                   ##### TIM Output Compare functions #####
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides functions allowing to:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Initialize and configure the TIM Output Compare.
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) De-initialize the TIM Output Compare.
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Output Compare.
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Output Compare.
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable interrupt.
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable interrupt.
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable DMA transfer.
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable DMA transfer.
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare according to the specified
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OC_DeInit() before HAL_TIM_OC_Init()
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef *htim)
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->OC_MspInitCallback == NULL)
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->OC_MspInitCallback = HAL_TIM_OC_MspInit;
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->OC_MspInitCallback(htim);
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Init the base time for the Output Compare */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM channels state */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_DeInit(TIM_HandleTypeDef *htim)
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 14


 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->OC_MspDeInitCallback == NULL)
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->OC_MspDeInitCallback = HAL_TIM_OC_MspDeInit;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->OC_MspDeInitCallback(htim);
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM channels state */
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare MSP.
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_OC_MspInit could be implemented in the user file
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM Output Compare MSP.
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef *htim)
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
ARM GAS  /tmp/ccFOYGRW.s 			page 15


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_OC_MspDeInit could be implemented in the user file
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation.
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Output compare channel */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the main output */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
ARM GAS  /tmp/ccFOYGRW.s 			page 16


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Output compare channel */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Main Output */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 17


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Output compare channel */
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the main output */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
ARM GAS  /tmp/ccFOYGRW.s 			page 18


 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode.
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 19


1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Output compare channel */
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the Main Output */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode.
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData The source Buffer address.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, const uint32_t *p
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                        uint16_t Length)
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 20


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
ARM GAS  /tmp/ccFOYGRW.s 			page 21


1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 22


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Output compare channel */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the main output */
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode.
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 23


1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Output compare channel */
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the Main Output */
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group3 TIM PWM functions
ARM GAS  /tmp/ccFOYGRW.s 			page 24


1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM PWM functions
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                           ##### TIM PWM functions #####
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides functions allowing to:
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Initialize and configure the TIM PWM.
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) De-initialize the TIM PWM.
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM PWM.
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM PWM.
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM PWM and enable interrupt.
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM PWM and disable interrupt.
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM PWM and enable DMA transfer.
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM PWM and disable DMA transfer.
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM PWM Time Base according to the specified
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->PWM_MspInitCallback == NULL)
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->PWM_MspInitCallback = HAL_TIM_PWM_MspInit;
ARM GAS  /tmp/ccFOYGRW.s 			page 25


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->PWM_MspInitCallback(htim);
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Init the base time for the PWM */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM channels state */
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_DeInit(TIM_HandleTypeDef *htim)
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->PWM_MspDeInitCallback == NULL)
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->PWM_MspDeInitCallback = HAL_TIM_PWM_MspDeInit;
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->PWM_MspDeInitCallback(htim);
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
ARM GAS  /tmp/ccFOYGRW.s 			page 26


1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM channels state */
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM PWM MSP.
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PWM_MspInit could be implemented in the user file
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM PWM MSP.
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef *htim)
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PWM_MspDeInit could be implemented in the user file
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the PWM signal generation.
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
ARM GAS  /tmp/ccFOYGRW.s 			page 27


1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Capture compare channel */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the main output */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the PWM signal generation.
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 28


1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Capture compare channel */
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Main Output */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the PWM signal generation in interrupt mode.
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
ARM GAS  /tmp/ccFOYGRW.s 			page 29


1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Capture compare channel */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the main output */
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the PWM signal generation in interrupt mode.
ARM GAS  /tmp/ccFOYGRW.s 			page 30


1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Capture compare channel */
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
ARM GAS  /tmp/ccFOYGRW.s 			page 31


1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the Main Output */
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode.
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData The source Buffer address.
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, const uint32_t *
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                         uint16_t Length)
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccFOYGRW.s 			page 32


1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
ARM GAS  /tmp/ccFOYGRW.s 			page 33


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Output Capture/Compare 3 request */
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Capture compare channel */
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the main output */
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 34


1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode.
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
ARM GAS  /tmp/ccFOYGRW.s 			page 35


1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Capture compare channel */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the Main Output */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group4 TIM Input Capture functions
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM Input Capture functions
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****               ##### TIM Input Capture functions #####
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****  [..]
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    This section provides functions allowing to:
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Initialize and configure the TIM Input Capture.
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) De-initialize the TIM Input Capture.
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Start the TIM Input Capture.
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Stop the TIM Input Capture.
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable interrupt.
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable interrupt.
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable DMA transfer.
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable DMA transfer.
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
ARM GAS  /tmp/ccFOYGRW.s 			page 36


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Time base according to the specified
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->IC_MspInitCallback == NULL)
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->IC_MspInitCallback = HAL_TIM_IC_MspInit;
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->IC_MspInitCallback(htim);
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Init the base time for the input capture */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM channels state */
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
ARM GAS  /tmp/ccFOYGRW.s 			page 37


2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_DeInit(TIM_HandleTypeDef *htim)
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->IC_MspDeInitCallback == NULL)
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->IC_MspDeInitCallback = HAL_TIM_IC_MspDeInit;
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->IC_MspDeInitCallback(htim);
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM channels state */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture MSP.
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/ccFOYGRW.s 			page 38


2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_IC_MspInit could be implemented in the user file
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM Input Capture MSP.
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef *htim)
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_IC_MspDeInit could be implemented in the user file
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement.
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((channel_state != HAL_TIM_CHANNEL_STATE_READY)
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_state != HAL_TIM_CHANNEL_STATE_READY))
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Input Capture channel */
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
ARM GAS  /tmp/ccFOYGRW.s 			page 39


2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement.
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Input Capture channel */
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in interrupt mode.
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
ARM GAS  /tmp/ccFOYGRW.s 			page 40


2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channel state */
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((channel_state != HAL_TIM_CHANNEL_STATE_READY)
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_state != HAL_TIM_CHANNEL_STATE_READY))
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
ARM GAS  /tmp/ccFOYGRW.s 			page 41


2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Input Capture channel */
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in interrupt mode.
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
ARM GAS  /tmp/ccFOYGRW.s 			page 42


2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Input Capture channel */
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in DMA mode.
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData The destination Buffer address.
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
ARM GAS  /tmp/ccFOYGRW.s 			page 43


2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((channel_state == HAL_TIM_CHANNEL_STATE_BUSY)
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_state == HAL_TIM_CHANNEL_STATE_BUSY))
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if ((channel_state == HAL_TIM_CHANNEL_STATE_READY)
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****            && (complementary_channel_state == HAL_TIM_CHANNEL_STATE_READY))
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Input Capture channel */
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 44


2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2  DMA request */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)p
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3  DMA request */
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)p
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
ARM GAS  /tmp/ccFOYGRW.s 			page 45


2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4  DMA request */
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in DMA mode.
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Input Capture channel */
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
ARM GAS  /tmp/ccFOYGRW.s 			page 46


2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3  DMA request */
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4  DMA request */
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Peripheral */
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the TIM channel state */
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group5 TIM One Pulse functions
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM One Pulse functions
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         ##### TIM One Pulse functions #####
ARM GAS  /tmp/ccFOYGRW.s 			page 47


2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides functions allowing to:
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Initialize and configure the TIM One Pulse.
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) De-initialize the TIM One Pulse.
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM One Pulse.
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM One Pulse.
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable interrupt.
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable interrupt.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable DMA transfer.
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable DMA transfer.
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Time Base according to the specified
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OnePulse_DeInit() before HAL_TIM_OnePulse_Init()
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   When the timer instance is initialized in One Pulse mode, timer
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         channels 1 and channel 2 are reserved and cannot be used for other
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         purpose.
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OnePulseMode Select the One pulse mode.
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_OPMODE_SINGLE: Only one pulse will be generated.
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_OPMODE_REPETITIVE: Repetitive pulses will be generated.
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Init(TIM_HandleTypeDef *htim, uint32_t OnePulseMode)
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OPM_MODE(OnePulseMode));
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 48


2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->OnePulse_MspInitCallback == NULL)
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->OnePulse_MspInitCallback = HAL_TIM_OnePulse_MspInit;
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->OnePulse_MspInitCallback(htim);
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Configure the Time base in the One Pulse Mode */
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the OPM Bit */
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Configure the OPM Mode */
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM channels state */
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM One Pulse
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_DeInit(TIM_HandleTypeDef *htim)
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->OnePulse_MspDeInitCallback == NULL)
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 49


2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->OnePulse_MspDeInitCallback = HAL_TIM_OnePulse_MspDeInit;
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->OnePulse_MspDeInitCallback(htim);
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel state */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse MSP.
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspInit(TIM_HandleTypeDef *htim)
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspInit could be implemented in the user file
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM One Pulse MSP.
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspDeInit(TIM_HandleTypeDef *htim)
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspDeInit could be implemented in the user file
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 50


2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation.
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OutputChannel See note above
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(OutputChannel);
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channels state */
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the main output */
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 51


2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation.
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OutputChannel See note above
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(OutputChannel);
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Main Output */
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode.
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OutputChannel See note above
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
ARM GAS  /tmp/ccFOYGRW.s 			page 52


2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(OutputChannel);
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM channels state */
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the main output */
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode.
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OutputChannel See note above
ARM GAS  /tmp/ccFOYGRW.s 			page 53


2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(OutputChannel);
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the Main Output */
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group6 TIM Encoder functions
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM Encoder functions
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                           ##### TIM Encoder functions #####
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides functions allowing to:
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Initialize and configure the TIM Encoder.
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) De-initialize the TIM Encoder.
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Encoder.
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Encoder.
ARM GAS  /tmp/ccFOYGRW.s 			page 54


2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Encoder and enable interrupt.
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable interrupt.
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Start the TIM Encoder and enable DMA transfer.
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable DMA transfer.
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface and initialize the associated handle.
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Encoder_DeInit() before HAL_TIM_Encoder_Init()
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Encoder mode and External clock mode 2 are not compatible and must not be selected toge
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         Ex: A call for @ref HAL_TIM_Encoder_Init will erase the settings of @ref HAL_TIM_Config
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         using TIM_CLOCKSOURCE_ETRMODE2 and vice versa
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   When the timer instance is initialized in Encoder mode, timer
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         channels 1 and channel 2 are reserved and cannot be used for other
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         purpose.
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sConfig TIM Encoder Interface configuration structure
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim, const TIM_Encoder_InitTypeDef *sCon
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the TIM handle allocation */
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim == NULL)
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(sConfig->EncoderMode));
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC1Selection));
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC2Selection));
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODERINPUT_POLARITY(sConfig->IC1Polarity));
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODERINPUT_POLARITY(sConfig->IC2Polarity));
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 55


3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_ResetCallback(htim);
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (htim->Encoder_MspInitCallback == NULL)
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Encoder_MspInitCallback = HAL_TIM_Encoder_MspInit;
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Encoder_MspInitCallback(htim);
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM state */
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the SMS and ECE bits */
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->SMCR &= ~(TIM_SMCR_SMS | TIM_SMCR_ECE);
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Configure the Time base in the Encoder Mode */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCER register value */
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the encoder Mode */
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx SMCR */
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
ARM GAS  /tmp/ccFOYGRW.s 			page 56


3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCER */
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Initialize the TIM state*/
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes the TIM Encoder interface
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_DeInit(TIM_HandleTypeDef *htim)
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->Encoder_MspDeInitCallback == NULL)
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Encoder_MspDeInitCallback = HAL_TIM_Encoder_MspDeInit;
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware */
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Encoder_MspDeInitCallback(htim);
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the DMA burst operation state */
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channels state */
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change TIM state */
ARM GAS  /tmp/ccFOYGRW.s 			page 57


3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Release Lock */
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface MSP.
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef *htim)
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_Encoder_MspInit could be implemented in the user file
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  DeInitializes TIM Encoder Interface MSP.
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef *htim)
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_Encoder_MspDeInit could be implemented in the user file
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface.
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
ARM GAS  /tmp/ccFOYGRW.s 			page 58


3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY))
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the encoder interface channels */
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
ARM GAS  /tmp/ccFOYGRW.s 			page 59


3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default :
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral */
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface.
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default :
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 60


3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in interrupt mode.
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY))
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 61


3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the encoder interface channels */
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the capture compare Interrupts 1 and/or 2 */
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default :
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 62


3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable the Peripheral */
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in interrupt mode.
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 */
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare Interrupts 2 */
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 and 2 */
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
ARM GAS  /tmp/ccFOYGRW.s 			page 63


3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in DMA mode.
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData1 The destination Buffer address for IC1.
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  pData2 The destination Buffer address for IC2.
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pD
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                             uint32_t *pData2, uint16_t Length)
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY))
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_BUSY;
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else if ((channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              && (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_READY))
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((pData1 == NULL) || (Length == 0U))
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 64


3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY)
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY))
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_BUSY;
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else if ((channel_2_state == HAL_TIM_CHANNEL_STATE_READY)
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              && (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_READY))
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((pData2 == NULL) || (Length == 0U))
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY)
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         || (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY))
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_BUSY;
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else if ((channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              && (channel_2_state == HAL_TIM_CHANNEL_STATE_READY)
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              && (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****              && (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_READY))
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((((pData1 == NULL) || (pData2 == NULL))) || (Length == 0U))
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
ARM GAS  /tmp/ccFOYGRW.s 			page 65


3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Input Capture DMA request */
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Capture compare channel */
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Peripheral */
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Capture compare channel */
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Peripheral */
ARM GAS  /tmp/ccFOYGRW.s 			page 66


3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            Length) != HAL_OK)
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Capture compare channel */
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the Peripheral */
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 67


3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in DMA mode.
3738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
3741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
3745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
3747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
3749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 */
3758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
3759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
3760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare DMA Request 2 */
3766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
3767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
3768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
3772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
3773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 and 2 */
3775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
3776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
3777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
3778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
3779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Peripheral */
3782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
3783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
3786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
3789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
ARM GAS  /tmp/ccFOYGRW.s 			page 68


3793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
3795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
3796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
3799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
3800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
3801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
3804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group7 TIM IRQ handler management
3806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM IRQ handler management
3807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
3808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
3809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
3810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         ##### IRQ handler management #####
3811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
3812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   [..]
3813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This section provides Timer IRQ handler function.
3814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
3816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
3817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
3819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  This function handles TIM interrupts requests.
3820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM  handle
3821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
3822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
3823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
3824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
3825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t itsource = htim->Instance->DIER;
3826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t itflag   = htim->Instance->SR;
3827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Capture compare 1 event */
3829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
3830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
3832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
3835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
3836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
3837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Input capture event */
3838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
3839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
3840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->IC_CaptureCallback(htim);
3842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
3844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
3846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Output compare event */
3847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         else
3848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
3849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccFOYGRW.s 			page 69


3850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->OC_DelayElapsedCallback(htim);
3851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->PWM_PulseFinishedCallback(htim);
3852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
3854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
3855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
3857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Capture compare 2 event */
3862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
3863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
3865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
3867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
3868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Input capture event */
3869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
3870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Output compare event */
3878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Capture compare 3 event */
3892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
3893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
3895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
3897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
3898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Input capture event */
3899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
3900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
ARM GAS  /tmp/ccFOYGRW.s 			page 70


3907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Output compare event */
3908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Capture compare 4 event */
3922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
3923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
3925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
3927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
3928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Input capture event */
3929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
3930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
3935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Output compare event */
3938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       else
3939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
3940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
3945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
3946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
3948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
3949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* TIM Update event */
3952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
3953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
3955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
3957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->PeriodElapsedCallback(htim);
3959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
3961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
ARM GAS  /tmp/ccFOYGRW.s 			page 71


3964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* TIM Break input event */
3965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
3966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
3968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
3970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->BreakCallback(htim);
3972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
3974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* TIM Trigger detection event */
3978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
3979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
3981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
3983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->TriggerCallback(htim);
3985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
3987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
3989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
3990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* TIM commutation event */
3991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
3992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
3993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
3994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
3995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
3996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->CommutationCallback(htim);
3998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
3999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       HAL_TIMEx_CommutCallback(htim);
4000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
4001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
4007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group8 TIM Peripheral Control functions
4010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM Peripheral Control functions
4011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
4012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
4013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
4014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                    ##### Peripheral Control functions #####
4015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
4016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****  [..]
4017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    This section provides functions allowing to:
4018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode.
4019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (+) Configure External Clock source.
4020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (+) Configure Complementary channels, break features and dead time.
ARM GAS  /tmp/ccFOYGRW.s 			page 72


4021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (+) Configure Master and the Slave synchronization.
4022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (+) Configure the DMA Burst Mode.
4023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
4025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
4026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
4030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
4031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
4032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sConfig TIM Output Compare configuration structure
4033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to configure
4034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
4035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim,
4042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            const TIM_OC_InitTypeDef *sConfig,
4043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            uint32_t Channel)
4044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
4049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
4050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
4051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
4053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
4054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
4056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
4058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the TIM Channel 1 in Output Compare */
4063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
4064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
4068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the TIM Channel 2 in Output Compare */
4073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
4074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
ARM GAS  /tmp/ccFOYGRW.s 			page 73


4078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the TIM Channel 3 in Output Compare */
4083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
4084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
4088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the TIM Channel 4 in Output Compare */
4093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
4094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
4098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
4099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Channels according to the specified
4109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_IC_InitTypeDef.
4110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM IC handle
4111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sConfig TIM Input Capture configuration structure
4112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel to configure
4113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
4114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, const TIM_IC_InitTypeDef *sConf
4121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->ICPolarity));
4127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
4128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
4129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));
4130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
4132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
4133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
ARM GAS  /tmp/ccFOYGRW.s 			page 74


4135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* TI1 Configuration */
4137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
4138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICPolarity,
4139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICSelection,
4140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICFilter);
4141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
4143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
4144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the IC1PSC value */
4146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
4147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
4149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* TI2 Configuration */
4151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance,
4154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICPolarity,
4155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICSelection,
4156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICFilter);
4157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the IC2PSC Bits */
4159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
4160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the IC2PSC value */
4162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
4163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
4165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* TI3 Configuration */
4167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,
4170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICPolarity,
4171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICSelection,
4172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICFilter);
4173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the IC3PSC Bits */
4175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
4176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the IC3PSC value */
4178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
4179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_4)
4181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* TI4 Configuration */
4183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance,
4186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICPolarity,
4187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICSelection,
4188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                       sConfig->ICFilter);
4189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the IC4PSC Bits */
4191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
ARM GAS  /tmp/ccFOYGRW.s 			page 75


4192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the IC4PSC value */
4194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
4195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
4197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     status = HAL_ERROR;
4199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
4208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
4209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM PWM handle
4210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sConfig TIM PWM configuration structure
4211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be configured
4212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
4213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
4220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                             const TIM_OC_InitTypeDef *sConfig,
4221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                             uint32_t Channel)
4222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
4227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
4228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
4229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
4230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
4232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
4233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
4235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
4237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Channel 1 in PWM mode */
4242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
4243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the Preload enable bit for channel1 */
4245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
4246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Output Fast mode */
4248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
ARM GAS  /tmp/ccFOYGRW.s 			page 76


4249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
4250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
4254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Channel 2 in PWM mode */
4259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
4260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the Preload enable bit for channel2 */
4262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
4263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Output Fast mode */
4265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
4266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
4267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
4271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Channel 3 in PWM mode */
4276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
4277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the Preload enable bit for channel3 */
4279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
4280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Output Fast mode */
4282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
4283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
4284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
4288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
4290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Channel 4 in PWM mode */
4293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
4294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the Preload enable bit for channel4 */
4296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
4297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the Output Fast mode */
4299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
4300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
4301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
4305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
ARM GAS  /tmp/ccFOYGRW.s 			page 77


4306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Channels according to the specified
4316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         parameters in the TIM_OnePulse_InitTypeDef.
4317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
4318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sConfig TIM One Pulse configuration structure
4319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OutputChannel TIM output channel to configure
4320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
4321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  InputChannel TIM input Channel to configure
4324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
4325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note  To output a waveform with a minimum delay user can enable the fast
4328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        mode by calling the @ref __HAL_TIM_ENABLE_OCxFAST macro. Then CCx
4329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        output is forced in response to the edge detection on TIx input,
4330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        without taking in account the comparison.
4331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_ConfigChannel(TIM_HandleTypeDef *htim,  TIM_OnePulse_InitTypeDef
4334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                  uint32_t OutputChannel,  uint32_t InputChannel)
4335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
4338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(OutputChannel));
4341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(InputChannel));
4342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (OutputChannel != InputChannel)
4344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Process Locked */
4346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_LOCK(htim);
4347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_BUSY;
4349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Extract the Output compare configuration from sConfig structure */
4351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.OCMode = sConfig->OCMode;
4352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.Pulse = sConfig->Pulse;
4353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.OCPolarity = sConfig->OCPolarity;
4354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.OCNPolarity = sConfig->OCNPolarity;
4355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.OCIdleState = sConfig->OCIdleState;
4356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     temp1.OCNIdleState = sConfig->OCNIdleState;
4357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (OutputChannel)
4359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_1:
4361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
ARM GAS  /tmp/ccFOYGRW.s 			page 78


4363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_OC1_SetConfig(htim->Instance, &temp1);
4365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
4366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_2:
4369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         TIM_OC2_SetConfig(htim->Instance, &temp1);
4373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
4374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default:
4377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         status = HAL_ERROR;
4378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
4379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (status == HAL_OK)
4382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       switch (InputChannel)
4384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         case TIM_CHANNEL_1:
4386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
4387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
4390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                             sConfig->ICSelection, sConfig->ICFilter);
4391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Reset the IC1PSC Bits */
4393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
4394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Select the Trigger source */
4396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_TS;
4397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_TS_TI1FP1;
4398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Select the Slave Mode */
4400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_SMS;
4401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
4402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           break;
4403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
4404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         case TIM_CHANNEL_2:
4406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
4407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
4410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                             sConfig->ICSelection, sConfig->ICFilter);
4411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Reset the IC2PSC Bits */
4413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
4414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Select the Trigger source */
4416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_TS;
4417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_TS_TI2FP2;
4418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Select the Slave Mode */
ARM GAS  /tmp/ccFOYGRW.s 			page 79


4420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_SMS;
4421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
4422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           break;
4423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
4424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         default:
4426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           status = HAL_ERROR;
4427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           break;
4428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
4432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_UNLOCK(htim);
4434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return status;
4436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
4438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
4440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the memory to the TIM peripheral
4445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
4446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data write
4447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
ARM GAS  /tmp/ccFOYGRW.s 			page 80


4477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
4479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress,
4482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                               uint32_t BurstRequestSrc, const uint32_t *BurstBuffer
4483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                               uint32_t  BurstLength)
4484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status;
4486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   status = HAL_TIM_DMABurst_MultiWriteStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, B
4488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                             ((BurstLength) >> 8U) + 1U);
4489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer multiple Data from the memory to the TIM peripheral
4497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
4498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA will start the Data write
4499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  DataLength Data length. This parameter can be one value
4531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between 1 and 0xFFFF.
4532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
ARM GAS  /tmp/ccFOYGRW.s 			page 81


4534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiWriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddre
4535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                    uint32_t BurstRequestSrc, const uint32_t *BurstB
4536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                    uint32_t  BurstLength,  uint32_t  DataLength)
4537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
4542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
4543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
4545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
4546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->DMABurstState == HAL_DMA_BURST_STATE_BUSY)
4548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
4550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (htim->DMABurstState == HAL_DMA_BURST_STATE_READY)
4552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
4554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
4556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
4558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->DMABurstState = HAL_DMA_BURST_STATE_BUSY;
4560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
4563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
4565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (BurstRequestSrc)
4568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
4572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
4573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
4574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
4577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer,
4580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC1:
4588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
ARM GAS  /tmp/ccFOYGRW.s 			page 82


4591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
4592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
4595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer,
4598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC2:
4606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
4609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
4610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
4613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer,
4616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC3:
4624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
4627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
4628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
4631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer,
4634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC4:
4642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
4645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
4646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp/ccFOYGRW.s 			page 83


4648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
4649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer,
4652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_COM:
4660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
4662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
4663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
4664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
4667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer,
4670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
4680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
4681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
4682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
4685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer,
4688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
4689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
4696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
4697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
4701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Configure the DMA Burst Mode */
4703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->DCR = (BurstBaseAddress | BurstLength);
4704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the TIM DMA Request */
ARM GAS  /tmp/ccFOYGRW.s 			page 84


4705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
4706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
4709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stops the TIM DMA Burst mode
4714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
4715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable
4716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
4719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA stream) */
4726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (BurstRequestSrc)
4727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
4731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC1:
4734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
4736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC2:
4739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
4741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC3:
4744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
4746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC4:
4749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
4751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_COM:
4754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
4756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
4761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccFOYGRW.s 			page 85


4762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
4764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
4765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
4769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
4771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
4772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Change the DMA burst operation state */
4774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
4775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
4778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory
4783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
4784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data read
4785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
4817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
ARM GAS  /tmp/ccFOYGRW.s 			page 86


4819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress,
4820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                              uint32_t BurstRequestSrc, uint32_t  *BurstBuffer, uint
4821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status;
4823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   status = HAL_TIM_DMABurst_MultiReadStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, Bu
4825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            ((BurstLength) >> 8U) + 1U);
4826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
4829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
4830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
4832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory
4833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
4834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data read
4835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         This parameter can be one of the following values:
4856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  DataLength Data length. This parameter can be one value
4867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         between 1 and 0xFFFF.
4868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
4869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
4870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddres
4871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                   uint32_t BurstRequestSrc, uint32_t  *BurstBuffer,
4872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                   uint32_t  BurstLength, uint32_t  DataLength)
4873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
4874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
4875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 87


4876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
4877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
4878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
4879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
4881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
4882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->DMABurstState == HAL_DMA_BURST_STATE_BUSY)
4884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_BUSY;
4886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (htim->DMABurstState == HAL_DMA_BURST_STATE_READY)
4888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
4890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       return HAL_ERROR;
4892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     else
4894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->DMABurstState = HAL_DMA_BURST_STATE_BUSY;
4896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
4899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
4901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
4902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (BurstRequestSrc)
4903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
4904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
4907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
4908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
4909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
4912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_
4915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
4916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC1:
4923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
4926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
4930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
ARM GAS  /tmp/ccFOYGRW.s 			page 88


4933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
4934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC2:
4941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
4944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
4948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
4952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC3:
4959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
4962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
4966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
4970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
4972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC4:
4977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
4980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
4981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
4983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
4984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
4985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
4986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
4987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
4988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
4989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
ARM GAS  /tmp/ccFOYGRW.s 			page 89


4990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
4991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
4992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
4993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
4994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_COM:
4995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
4996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
4997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
4998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
4999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
5001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
5002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
5004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (ui
5005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
5006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
5008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
5009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
5013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
5015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
5016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
5017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the DMA error callback */
5019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
5020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the DMA stream */
5022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32
5023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                            DataLength) != HAL_OK)
5024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
5026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
5027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
5031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
5032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
5036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Configure the DMA Burst Mode */
5038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Instance->DCR = (BurstBaseAddress | BurstLength);
5039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Enable the TIM DMA Request */
5041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
5042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
5045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
5046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
ARM GAS  /tmp/ccFOYGRW.s 			page 90


5047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Stop the DMA burst reading
5050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable.
5052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
5055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
5060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA stream) */
5062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (BurstRequestSrc)
5063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_UPDATE:
5065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
5067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC1:
5070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
5072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC2:
5075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
5077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC3:
5080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
5082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_CC4:
5085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
5087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_COM:
5090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
5092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
5095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
5097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
5100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
5101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 91


5104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
5105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
5107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
5108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Change the DMA burst operation state */
5110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
5111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
5114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
5115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Generate a software event
5119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  EventSource specifies the event source.
5121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
5122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_UPDATE: Timer update Event source
5123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC1: Timer Capture Compare 1 Event source
5124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC2: Timer Capture Compare 2 Event source
5125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC3: Timer Capture Compare 3 Event source
5126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC4: Timer Capture Compare 4 Event source
5127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_COM: Timer COM event source
5128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_TRIGGER: Timer Trigger Event source
5129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK: Timer Break event source
5130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   Basic timers can only generate an update event.
5131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_COM is relevant only with advanced timer instances.
5132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_BREAK are relevant only for timer instances
5133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         supporting a break input.
5134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_GenerateEvent(TIM_HandleTypeDef *htim, uint32_t EventSource)
5138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
5141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(EventSource));
5142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
5144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
5145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM state */
5147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
5148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the event sources */
5150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
5151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Change the TIM state */
5153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Return function status */
5158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
5159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 92


5161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configures the OCRef clear feature
5163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sClearInputConfig pointer to a TIM_ClearInputConfigTypeDef structure that
5165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral.
5166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel specifies the TIM Channel
5167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
5168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
5169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
5170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
5171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
5172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim,
5175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            const TIM_ClearInputConfigTypeDef *sClearInputConfig,
5176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            uint32_t Channel)
5177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_OCXREF_CLEAR_INSTANCE(htim->Instance));
5182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
5183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
5185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
5186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
5188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (sClearInputConfig->ClearInputSource)
5190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_NONE:
5192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Clear the OCREF clear selection bit and the the ETR Bits */
5194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       CLEAR_BIT(htim->Instance->SMCR, (TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP))
5195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_ETR:
5199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
5201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
5202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
5203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
5204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* When OCRef clear feature is used with ETR source, ETR prescaler must be off */
5206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (sClearInputConfig->ClearInputPrescaler != TIM_CLEARINPUTPRESCALER_DIV1)
5207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->State = HAL_TIM_STATE_READY;
5209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         __HAL_UNLOCK(htim);
5210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
5211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
5214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
5215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClearInputConfig->ClearInputPolarity,
5216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClearInputConfig->ClearInputFilter);
5217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccFOYGRW.s 			page 93


5218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
5221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
5222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (status == HAL_OK)
5226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (Channel)
5228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_1:
5230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
5232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 1 */
5234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
5235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         else
5237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 1 */
5239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
5240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_2:
5244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
5246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 2 */
5248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
5249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         else
5251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 2 */
5253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
5254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_3:
5258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
5260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 3 */
5262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
5263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         else
5265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 3 */
5267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
5268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case TIM_CHANNEL_4:
5272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
5273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
5274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
ARM GAS  /tmp/ccFOYGRW.s 			page 94


5275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 4 */
5276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
5277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         else
5279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         {
5280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 4 */
5281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
5282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         }
5283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
5285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default:
5286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
5295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief   Configures the clock source to be used
5299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
5301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         contains the clock source information for the TIM peripheral.
5302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *
5305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
5308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Process Locked */
5310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
5311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
5313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
5316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
5318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
5319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
5320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
5321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
5322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
5324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_INTERNAL:
5326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_INSTANCE(htim->Instance));
5328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE1:
ARM GAS  /tmp/ccFOYGRW.s 			page 95


5332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 1 (ETRF)*/
5334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
5335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
5337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
5338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the ETR Clock source */
5342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
5343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
5344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
5345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
5346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Select the External clock mode1 and the ETRF trigger */
5348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
5349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
5350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Write to TIMx SMCR */
5351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
5352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE2:
5356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 2 (ETRF)*/
5358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(htim->Instance));
5359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
5361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
5362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the ETR Clock source */
5366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
5367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
5368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
5369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
5370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Enable the External clock mode2 */
5371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
5372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1:
5376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
5378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
5379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
5381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
5385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
5386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
5387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
5388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
ARM GAS  /tmp/ccFOYGRW.s 			page 96


5389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI2:
5392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 (ETRF)*/
5394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
5395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check TI2 input conditioning related parameters */
5397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
5401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
5402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
5403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
5404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1ED:
5408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
5410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
5411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
5413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
5417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
5418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
5419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
5420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR0:
5424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR1:
5425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR2:
5426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR3:
5427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check whether or not the timer instance supports internal trigger input */
5429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
5430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
5432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
5436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
5437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
5444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 97


5446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Selects the signal connected to the TI1 input: direct from CH1_input
5448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         or a XOR combination between CH1_input, CH2_input & CH3_input
5449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle.
5450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TI1_Selection Indicate whether or not channel 1 is connected to the
5451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         output of a XOR gate.
5452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
5453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_CH1: The TIMx_CH1 pin is connected to TI1 input
5454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_XORCOMBINATION: The TIMx_CH1, CH2 and CH3
5455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            pins are connected to the TI1 input (XOR combination)
5456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigTI1Input(TIM_HandleTypeDef *htim, uint32_t TI1_Selection)
5459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr2;
5461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
5464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_TI1SELECTION(TI1_Selection));
5465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
5467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
5468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the TI1 selection */
5470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
5471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the TI1 selection */
5473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
5474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMxCR2 */
5476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
5477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
5479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode
5483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle.
5484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
5485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
5486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
5487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
5488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro(TIM_HandleTypeDef *htim, const TIM_SlaveConfigTypeDef 
5491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
5494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
5495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
5496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
5498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
5500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
5502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 98


5503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
5504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_UNLOCK(htim);
5505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
5506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable Trigger Interrupt */
5509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
5510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable Trigger DMA request */
5512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
5513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
5519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode in interrupt mode
5523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle.
5524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
5525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
5526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
5527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
5528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL status
5529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro_IT(TIM_HandleTypeDef *htim,
5531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                 const TIM_SlaveConfigTypeDef *sSlaveConfig)
5532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
5534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
5535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
5536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
5537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_LOCK(htim);
5539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
5541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
5543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
5545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     __HAL_UNLOCK(htim);
5546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
5547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Enable Trigger Interrupt */
5550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
5551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable Trigger DMA request */
5553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
5554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
5556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   __HAL_UNLOCK(htim);
5558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp/ccFOYGRW.s 			page 99


5560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Read the captured value from Capture Compare unit
5564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle.
5565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
5566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
5567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
5568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
5569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
5570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
5571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval Captured value
5572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** uint32_t HAL_TIM_ReadCapturedValue(const TIM_HandleTypeDef *htim, uint32_t Channel)
5574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpreg = 0U;
5576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (Channel)
5578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_1:
5580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
5582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
5583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Return the capture 1 value */
5585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
5586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_2:
5590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
5592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Return the capture 2 value */
5595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
5596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_3:
5601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
5603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
5604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Return the capture 3 value */
5606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
5607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_CHANNEL_4:
5612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
5614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
5615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Return the capture 4 value */
ARM GAS  /tmp/ccFOYGRW.s 			page 100


5617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
5618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
5623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
5624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return tmpreg;
5627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
5631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group9 TIM Callbacks functions
5634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief    TIM Callbacks functions
5635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
5636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
5637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
5638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         ##### TIM Callbacks functions #####
5639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
5640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****  [..]
5641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    This section provides TIM callback functions:
5642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) TIM Period elapsed callback
5643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) TIM Output Compare callback
5644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) TIM Input capture callback
5645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) TIM Trigger callback
5646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    (+) TIM Error callback
5647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
5649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
5650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Period elapsed callback in non-blocking mode
5654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
5658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
5664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Period elapsed half complete callback in non-blocking mode
5669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedHalfCpltCallback(TIM_HandleTypeDef *htim)
5673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
ARM GAS  /tmp/ccFOYGRW.s 			page 101


5674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedHalfCpltCallback could be implemented in the user file
5679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Output Compare callback in non-blocking mode
5684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM OC handle
5685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
5688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
5694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Input Capture callback in non-blocking mode
5699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM IC handle
5700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
5703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_IC_CaptureCallback could be implemented in the user file
5709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Input Capture half complete callback in non-blocking mode
5714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM IC handle
5715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureHalfCpltCallback(TIM_HandleTypeDef *htim)
5718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_IC_CaptureHalfCpltCallback could be implemented in the user file
5724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  PWM Pulse finished callback in non-blocking mode
5729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
ARM GAS  /tmp/ccFOYGRW.s 			page 102


5731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
5733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
5739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  PWM Pulse finished half complete callback in non-blocking mode
5744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedHalfCpltCallback(TIM_HandleTypeDef *htim)
5748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedHalfCpltCallback could be implemented in the user file
5754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Hall Trigger detection callback in non-blocking mode
5759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
5763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_TriggerCallback could be implemented in the user file
5769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Hall Trigger detection half complete callback in non-blocking mode
5774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_TriggerHalfCpltCallback(TIM_HandleTypeDef *htim)
5778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_TriggerHalfCpltCallback could be implemented in the user file
5784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
ARM GAS  /tmp/ccFOYGRW.s 			page 103


5788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Timer error callback in non-blocking mode
5789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
5790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
5791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** __weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
5793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   UNUSED(htim);
5796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****             the HAL_TIM_ErrorCallback could be implemented in the user file
5799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****    */
5800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
5801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
5804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Register a User TIM callback to be used instead of the weak predefined callback
5805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param htim tim handle
5806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param CallbackID ID of the callback to be registered
5807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        This parameter can be one of the following values:
5808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
5809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
5810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
5811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
5812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
5813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
5814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
5815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
5816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
5817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
5818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
5819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
5820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
5821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
5822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
5823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
5824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
5825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
5826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
5827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
5828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
5829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
5830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
5831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
5832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
5833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
5834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
5835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @param pCallback pointer to the callback function
5836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @retval status
5837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
5838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_RegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Callb
5839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                            pTIM_CallbackTypeDef pCallback)
5840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
5841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (pCallback == NULL)
5844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 104


5845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     return HAL_ERROR;
5846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
5849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (CallbackID)
5851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspInitCallback                 = pCallback;
5854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspDeInitCallback               = pCallback;
5858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspInitCallback                   = pCallback;
5862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspDeInitCallback                 = pCallback;
5866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspInitCallback                   = pCallback;
5870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspDeInitCallback                 = pCallback;
5874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspInitCallback                  = pCallback;
5878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspDeInitCallback                = pCallback;
5882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspInitCallback             = pCallback;
5886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback           = pCallback;
5890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspInitCallback              = pCallback;
5894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback            = pCallback;
5898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspInitCallback           = pCallback;
ARM GAS  /tmp/ccFOYGRW.s 			page 105


5902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback         = pCallback;
5906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
5909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PeriodElapsedCallback                = pCallback;
5910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
5913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback        = pCallback;
5914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
5917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->TriggerCallback                      = pCallback;
5918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
5921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->TriggerHalfCpltCallback              = pCallback;
5922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
5925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureCallback                   = pCallback;
5926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
5929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback           = pCallback;
5930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
5933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_DelayElapsedCallback              = pCallback;
5934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
5937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback            = pCallback;
5938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
5941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback    = pCallback;
5942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
5945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->ErrorCallback                        = pCallback;
5946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
5949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->CommutationCallback                  = pCallback;
5950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
5953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->CommutationHalfCpltCallback          = pCallback;
5954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
5957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->BreakCallback                        = pCallback;
5958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
ARM GAS  /tmp/ccFOYGRW.s 			page 106


5959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default :
5961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
5962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         status = HAL_ERROR;
5963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
5965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
5966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
5967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
5968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (CallbackID)
5969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
5970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspInitCallback         = pCallback;
5972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = pCallback;
5976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspInitCallback           = pCallback;
5980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = pCallback;
5984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspInitCallback           = pCallback;
5988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = pCallback;
5992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspInitCallback          = pCallback;
5996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
5997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
5998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = pCallback;
6000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = pCallback;
6004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
6007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = pCallback;
6008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = pCallback;
6012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = pCallback;
ARM GAS  /tmp/ccFOYGRW.s 			page 107


6016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = pCallback;
6020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = pCallback;
6024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default :
6027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
6028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         status = HAL_ERROR;
6029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Return error status */
6035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     status = HAL_ERROR;
6036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
6039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Unregister a TIM callback
6043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *         TIM callback is redirected to the weak predefined callback
6044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param htim tim handle
6045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param CallbackID ID of the callback to be unregistered
6046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        This parameter can be one of the following values:
6047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
6048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
6049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
6050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
6051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
6052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
6053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
6054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
6055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
6056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
6057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
6058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
6059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
6060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
6061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
6062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
6063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
6064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
6065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
6066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
6067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
6068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
6069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
6070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
6071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
6072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
ARM GAS  /tmp/ccFOYGRW.s 			page 108


6073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
6074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          @retval status
6075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_UnRegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Cal
6077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
6079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
6081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (CallbackID)
6083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
6085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Base MspInit Callback */
6086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspInitCallback              = HAL_TIM_Base_MspInit;
6087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
6090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Base Msp DeInit Callback */
6091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspDeInitCallback            = HAL_TIM_Base_MspDeInit;
6092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
6095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Msp Init Callback */
6096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspInitCallback                = HAL_TIM_IC_MspInit;
6097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
6100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Msp DeInit Callback */
6101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspDeInitCallback              = HAL_TIM_IC_MspDeInit;
6102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
6105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak OC Msp Init Callback */
6106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspInitCallback                = HAL_TIM_OC_MspInit;
6107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
6110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak OC Msp DeInit Callback */
6111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspDeInitCallback              = HAL_TIM_OC_MspDeInit;
6112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
6115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Msp Init Callback */
6116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspInitCallback               = HAL_TIM_PWM_MspInit;
6117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
6120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Msp DeInit Callback */
6121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspDeInitCallback             = HAL_TIM_PWM_MspDeInit;
6122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak One Pulse Msp Init Callback */
6126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspInitCallback          = HAL_TIM_OnePulse_MspInit;
6127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
ARM GAS  /tmp/ccFOYGRW.s 			page 109


6130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak One Pulse Msp DeInit Callback */
6131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback        = HAL_TIM_OnePulse_MspDeInit;
6132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Encoder Msp Init Callback */
6136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspInitCallback           = HAL_TIM_Encoder_MspInit;
6137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Encoder Msp DeInit Callback */
6141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback         = HAL_TIM_Encoder_MspDeInit;
6142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp Init Callback */
6146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspInitCallback        = HAL_TIMEx_HallSensor_MspInit;
6147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp DeInit Callback */
6151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback      = HAL_TIMEx_HallSensor_MspDeInit;
6152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
6155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Period Elapsed Callback */
6156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PeriodElapsedCallback             = HAL_TIM_PeriodElapsedCallback;
6157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
6160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Period Elapsed half complete Callback */
6161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback     = HAL_TIM_PeriodElapsedHalfCpltCallback;
6162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
6165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Trigger Callback */
6166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->TriggerCallback                   = HAL_TIM_TriggerCallback;
6167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
6170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Trigger half complete Callback */
6171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->TriggerHalfCpltCallback           = HAL_TIM_TriggerHalfCpltCallback;
6172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
6175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Capture Callback */
6176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureCallback                = HAL_TIM_IC_CaptureCallback;
6177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
6180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Capture half complete Callback */
6181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback        = HAL_TIM_IC_CaptureHalfCpltCallback;
6182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
6185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak OC Delay Elapsed Callback */
6186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_DelayElapsedCallback           = HAL_TIM_OC_DelayElapsedCallback;
ARM GAS  /tmp/ccFOYGRW.s 			page 110


6187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
6190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Pulse Finished Callback */
6191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback         = HAL_TIM_PWM_PulseFinishedCallback;
6192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
6195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Pulse Finished half complete Callback */
6196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback = HAL_TIM_PWM_PulseFinishedHalfCpltCallback;
6197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
6200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Error Callback */
6201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->ErrorCallback                     = HAL_TIM_ErrorCallback;
6202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
6205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Commutation Callback */
6206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->CommutationCallback               = HAL_TIMEx_CommutCallback;
6207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
6210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Commutation half complete Callback */
6211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->CommutationHalfCpltCallback       = HAL_TIMEx_CommutHalfCpltCallback;
6212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
6215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Break Callback */
6216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->BreakCallback                     = HAL_TIMEx_BreakCallback;
6217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default :
6220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
6221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         status = HAL_ERROR;
6222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
6226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     switch (CallbackID)
6228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
6230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Base MspInit Callback */
6231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspInitCallback         = HAL_TIM_Base_MspInit;
6232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
6235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Base Msp DeInit Callback */
6236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = HAL_TIM_Base_MspDeInit;
6237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
6240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Msp Init Callback */
6241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspInitCallback           = HAL_TIM_IC_MspInit;
6242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 111


6244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
6245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak IC Msp DeInit Callback */
6246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = HAL_TIM_IC_MspDeInit;
6247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
6250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak OC Msp Init Callback */
6251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspInitCallback           = HAL_TIM_OC_MspInit;
6252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
6255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak OC Msp DeInit Callback */
6256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = HAL_TIM_OC_MspDeInit;
6257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
6260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Msp Init Callback */
6261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspInitCallback          = HAL_TIM_PWM_MspInit;
6262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
6265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak PWM Msp DeInit Callback */
6266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = HAL_TIM_PWM_MspDeInit;
6267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak One Pulse Msp Init Callback */
6271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = HAL_TIM_OnePulse_MspInit;
6272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
6275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak One Pulse Msp DeInit Callback */
6276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = HAL_TIM_OnePulse_MspDeInit;
6277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Encoder Msp Init Callback */
6281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = HAL_TIM_Encoder_MspInit;
6282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Encoder Msp DeInit Callback */
6286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = HAL_TIM_Encoder_MspDeInit;
6287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp Init Callback */
6291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = HAL_TIMEx_HallSensor_MspInit;
6292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp DeInit Callback */
6296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = HAL_TIMEx_HallSensor_MspDeInit;
6297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       default :
6300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         /* Return error status */
ARM GAS  /tmp/ccFOYGRW.s 			page 112


6301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         status = HAL_ERROR;
6302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         break;
6303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Return error status */
6308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     status = HAL_ERROR;
6309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
6312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
6317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group10 TIM Peripheral State functions
6320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *  @brief   TIM Peripheral State functions
6321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *
6322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @verbatim
6323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
6324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         ##### Peripheral State functions #####
6325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   ==============================================================================
6326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     [..]
6327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     This subsection permits to get in run-time the status of the peripheral
6328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     and the data flow.
6329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** @endverbatim
6331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
6332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM Base handle state.
6336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Base handle
6337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
6338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Base_GetState(const TIM_HandleTypeDef *htim)
6340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM OC handle state.
6346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
6347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
6348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OC_GetState(const TIM_HandleTypeDef *htim)
6350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM PWM handle state.
6356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
6357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
ARM GAS  /tmp/ccFOYGRW.s 			page 113


6358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_PWM_GetState(const TIM_HandleTypeDef *htim)
6360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM Input Capture handle state.
6366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM IC handle
6367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
6368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_IC_GetState(const TIM_HandleTypeDef *htim)
6370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM One Pulse Mode handle state.
6376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM OPM handle
6377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
6378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OnePulse_GetState(const TIM_HandleTypeDef *htim)
6380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode handle state.
6386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
6387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval HAL state
6388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Encoder_GetState(const TIM_HandleTypeDef *htim)
6390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->State;
6392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode handle state.
6396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
6397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval Active channel
6398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_ActiveChannel HAL_TIM_GetActiveChannel(const TIM_HandleTypeDef *htim)
6400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->Channel;
6402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return actual state of the TIM channel.
6406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
6407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Channel TIM Channel
6408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
6409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
6410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
6411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
6412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
6413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_5: TIM Channel 5
6414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_CHANNEL_6: TIM Channel 6
ARM GAS  /tmp/ccFOYGRW.s 			page 114


6415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval TIM Channel state
6416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_ChannelStateTypeDef HAL_TIM_GetChannelState(const TIM_HandleTypeDef *htim,  uint32_t Channe
6418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state;
6420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
6422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
6423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
6425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return channel_state;
6427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Return actual state of a DMA burst operation.
6431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
6432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval DMA burst state
6433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** HAL_TIM_DMABurstStateTypeDef HAL_TIM_DMABurstState(const TIM_HandleTypeDef *htim)
6435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
6437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
6438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return htim->DMABurstState;
6440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
6444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @}
6448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /** @defgroup TIM_Private_Functions TIM Private Functions
6451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @{
6452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA error callback
6456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_DMAError(DMA_HandleTypeDef *hdma)
6460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
6464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
6466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
6467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
6469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
6471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
ARM GAS  /tmp/ccFOYGRW.s 			page 115


6472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
6474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
6476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
6477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
6479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
6481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
6482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
6486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->ErrorCallback(htim);
6490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
6492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
6495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse complete callback.
6499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma)
6503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
6507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
6509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
6513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
6516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
6518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
6522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
6525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
6527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
ARM GAS  /tmp/ccFOYGRW.s 			page 116


6529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
6531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
6534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
6536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
6540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
6545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->PWM_PulseFinishedCallback(htim);
6549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
6551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
6554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse half complete callback.
6558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_DMADelayPulseHalfCplt(DMA_HandleTypeDef *hdma)
6562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
6566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
6568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
6570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
6572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
6574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
6576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
6578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
6580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
6584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 117


6586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->PWM_PulseFinishedHalfCpltCallback(htim);
6588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
6590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
6593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Capture complete callback.
6597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_DMACaptureCplt(DMA_HandleTypeDef *hdma)
6601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
6605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
6607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
6611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
6612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
6615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
6617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
6621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
6622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
6625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
6627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
6631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
6632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
6633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
6635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
6637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
6639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
6640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
6641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
6642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
ARM GAS  /tmp/ccFOYGRW.s 			page 118


6643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
6647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->IC_CaptureCallback(htim);
6651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim);
6653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
6656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Capture half complete callback.
6660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_DMACaptureHalfCplt(DMA_HandleTypeDef *hdma)
6664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
6668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
6670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
6672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
6674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
6676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
6678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
6680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
6682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
6684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* nothing to do */
6686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->IC_CaptureHalfCpltCallback(htim);
6690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_IC_CaptureHalfCpltCallback(htim);
6692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
6695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse complete callback.
6699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
ARM GAS  /tmp/ccFOYGRW.s 			page 119


6700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma)
6703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->hdma[TIM_DMA_ID_UPDATE]->Init.Mode == DMA_NORMAL)
6707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
6709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->PeriodElapsedCallback(htim);
6713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
6715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse half complete callback.
6720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma)
6724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->PeriodElapsedHalfCpltCallback(htim);
6729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_PeriodElapsedHalfCpltCallback(htim);
6731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Trigger callback.
6736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma)
6740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (htim->hdma[TIM_DMA_ID_TRIGGER]->Init.Mode == DMA_NORMAL)
6744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
6746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->TriggerCallback(htim);
6750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
6752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  TIM DMA Trigger half complete callback.
ARM GAS  /tmp/ccFOYGRW.s 			page 120


6757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma)
6761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
6763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->TriggerHalfCpltCallback(htim);
6766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #else
6767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_TIM_TriggerHalfCpltCallback(htim);
6768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Time Base configuration
6773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx TIM peripheral
6774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  Structure TIM Base configuration structure
6775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
6778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr1;
6780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
6781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set TIM Time Base Unit parameters ---------------------------------------*/
6783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
6784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Select the Counter Mode */
6786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
6787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
6788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
6791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the clock division */
6793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
6794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
6795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the auto-reload preload */
6798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
6799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
6801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Autoreload value */
6803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
6804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Prescaler value */
6806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->PSC = Structure->Prescaler;
6807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
6809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Repetition Counter value */
6811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
6812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 121


6814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Generate an update event to reload the Prescaler
6815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****      and the repetition counter (only for advanced timer) value immediately */
6816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
6817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
6819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
6820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Clear the update flag */
6822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
6823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Timer Output Compare 1 configuration
6828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
  29              		.loc 1 6833 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 6833 1 is_stmt 0 view .LVU1
  35 0000 30B4     		push	{r4, r5}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
6834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmrx;
  40              		.loc 1 6834 3 is_stmt 1 view .LVU2
6835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
  41              		.loc 1 6835 3 view .LVU3
6836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr2;
  42              		.loc 1 6836 3 view .LVU4
6837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
  43              		.loc 1 6839 3 view .LVU5
  44              		.loc 1 6839 11 is_stmt 0 view .LVU6
  45 0002 036A     		ldr	r3, [r0, #32]
  46              	.LVL1:
6840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
6842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
  47              		.loc 1 6842 3 is_stmt 1 view .LVU7
  48              		.loc 1 6842 7 is_stmt 0 view .LVU8
  49 0004 026A     		ldr	r2, [r0, #32]
  50              		.loc 1 6842 14 view .LVU9
  51 0006 22F00102 		bic	r2, r2, #1
  52 000a 0262     		str	r2, [r0, #32]
6843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
  53              		.loc 1 6845 3 is_stmt 1 view .LVU10
ARM GAS  /tmp/ccFOYGRW.s 			page 122


  54              		.loc 1 6845 10 is_stmt 0 view .LVU11
  55 000c 4268     		ldr	r2, [r0, #4]
  56              	.LVL2:
6846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
6848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
  57              		.loc 1 6848 3 is_stmt 1 view .LVU12
  58              		.loc 1 6848 12 is_stmt 0 view .LVU13
  59 000e 8469     		ldr	r4, [r0, #24]
  60              	.LVL3:
6849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Compare Mode Bits */
6851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC1M;
  61              		.loc 1 6851 3 is_stmt 1 view .LVU14
6852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
  62              		.loc 1 6852 3 view .LVU15
  63              		.loc 1 6852 12 is_stmt 0 view .LVU16
  64 0010 24F0730C 		bic	ip, r4, #115
  65              	.LVL4:
6853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Output Compare Mode */
6854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
  66              		.loc 1 6854 3 is_stmt 1 view .LVU17
  67              		.loc 1 6854 24 is_stmt 0 view .LVU18
  68 0014 0C68     		ldr	r4, [r1]
  69              		.loc 1 6854 12 view .LVU19
  70 0016 44EA0C04 		orr	r4, r4, ip
  71              	.LVL5:
6855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Polarity level */
6857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
  72              		.loc 1 6857 3 is_stmt 1 view .LVU20
  73              		.loc 1 6857 11 is_stmt 0 view .LVU21
  74 001a 23F0020C 		bic	ip, r3, #2
  75              	.LVL6:
6858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
  76              		.loc 1 6859 3 is_stmt 1 view .LVU22
  77              		.loc 1 6859 23 is_stmt 0 view .LVU23
  78 001e 8B68     		ldr	r3, [r1, #8]
  79              		.loc 1 6859 11 view .LVU24
  80 0020 43EA0C03 		orr	r3, r3, ip
  81              	.LVL7:
6860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
  82              		.loc 1 6861 3 is_stmt 1 view .LVU25
  83              		.loc 1 6861 6 is_stmt 0 view .LVU26
  84 0024 114D     		ldr	r5, .L7
  85 0026 A842     		cmp	r0, r5
  86 0028 03D0     		beq	.L2
  87              		.loc 1 6861 7 discriminator 1 view .LVU27
  88 002a 05F58065 		add	r5, r5, #1024
  89 002e A842     		cmp	r0, r5
  90 0030 05D1     		bne	.L3
  91              	.L2:
6862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Check parameters */
6864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
ARM GAS  /tmp/ccFOYGRW.s 			page 123


  92              		.loc 1 6864 5 is_stmt 1 view .LVU28
6865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N Polarity level */
6867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
  93              		.loc 1 6867 5 view .LVU29
  94              		.loc 1 6867 13 is_stmt 0 view .LVU30
  95 0032 23F00803 		bic	r3, r3, #8
  96              	.LVL8:
6868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Polarity */
6869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
  97              		.loc 1 6869 5 is_stmt 1 view .LVU31
  98              		.loc 1 6869 13 is_stmt 0 view .LVU32
  99 0036 CD68     		ldr	r5, [r1, #12]
 100 0038 2B43     		orrs	r3, r3, r5
 101              	.LVL9:
6870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N State */
6871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
 102              		.loc 1 6871 5 is_stmt 1 view .LVU33
 103              		.loc 1 6871 13 is_stmt 0 view .LVU34
 104 003a 23F00403 		bic	r3, r3, #4
 105              	.LVL10:
 106              	.L3:
6872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 107              		.loc 1 6874 3 is_stmt 1 view .LVU35
 108              		.loc 1 6874 6 is_stmt 0 view .LVU36
 109 003e 0B4D     		ldr	r5, .L7
 110 0040 A842     		cmp	r0, r5
 111 0042 03D0     		beq	.L4
 112              		.loc 1 6874 7 discriminator 1 view .LVU37
 113 0044 05F58065 		add	r5, r5, #1024
 114 0048 A842     		cmp	r0, r5
 115 004a 07D1     		bne	.L5
 116              	.L4:
6875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Check parameters */
6877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 117              		.loc 1 6877 5 is_stmt 1 view .LVU38
6878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 118              		.loc 1 6878 5 view .LVU39
6879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
6881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1;
 119              		.loc 1 6881 5 view .LVU40
 120              	.LVL11:
6882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
 121              		.loc 1 6882 5 view .LVU41
 122              		.loc 1 6882 12 is_stmt 0 view .LVU42
 123 004c 22F44072 		bic	r2, r2, #768
 124              	.LVL12:
6883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output Idle state */
6884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
 125              		.loc 1 6884 5 is_stmt 1 view .LVU43
 126              		.loc 1 6884 12 is_stmt 0 view .LVU44
 127 0050 4D69     		ldr	r5, [r1, #20]
 128 0052 45EA020C 		orr	ip, r5, r2
ARM GAS  /tmp/ccFOYGRW.s 			page 124


 129              	.LVL13:
6885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Idle state */
6886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
 130              		.loc 1 6886 5 is_stmt 1 view .LVU45
 131              		.loc 1 6886 24 is_stmt 0 view .LVU46
 132 0056 8A69     		ldr	r2, [r1, #24]
 133              		.loc 1 6886 12 view .LVU47
 134 0058 42EA0C02 		orr	r2, r2, ip
 135              	.LVL14:
 136              	.L5:
6887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CR2 */
6890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 137              		.loc 1 6890 3 is_stmt 1 view .LVU48
 138              		.loc 1 6890 13 is_stmt 0 view .LVU49
 139 005c 4260     		str	r2, [r0, #4]
6891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
6893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 140              		.loc 1 6893 3 is_stmt 1 view .LVU50
 141              		.loc 1 6893 15 is_stmt 0 view .LVU51
 142 005e 8461     		str	r4, [r0, #24]
6894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
 143              		.loc 1 6896 3 is_stmt 1 view .LVU52
 144              		.loc 1 6896 25 is_stmt 0 view .LVU53
 145 0060 4A68     		ldr	r2, [r1, #4]
 146              	.LVL15:
 147              		.loc 1 6896 14 view .LVU54
 148 0062 4263     		str	r2, [r0, #52]
6897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCER */
6899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 149              		.loc 1 6899 3 is_stmt 1 view .LVU55
 150              		.loc 1 6899 14 is_stmt 0 view .LVU56
 151 0064 0362     		str	r3, [r0, #32]
6900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 152              		.loc 1 6900 1 view .LVU57
 153 0066 30BC     		pop	{r4, r5}
 154              	.LCFI1:
 155              		.cfi_restore 5
 156              		.cfi_restore 4
 157              		.cfi_def_cfa_offset 0
 158              	.LVL16:
 159              		.loc 1 6900 1 view .LVU58
 160 0068 7047     		bx	lr
 161              	.L8:
 162 006a 00BF     		.align	2
 163              	.L7:
 164 006c 00000140 		.word	1073807360
 165              		.cfi_endproc
 166              	.LFE239:
 168              		.section	.text.TIM_OC3_SetConfig,"ax",%progbits
 169              		.align	1
 170              		.syntax unified
ARM GAS  /tmp/ccFOYGRW.s 			page 125


 171              		.thumb
 172              		.thumb_func
 174              	TIM_OC3_SetConfig:
 175              	.LVL17:
 176              	.LFB241:
6901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Timer Output Compare 2 configuration
6904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
6910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmrx;
6911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
6912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr2;
6913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
6916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
6918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
6919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
6922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
6924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
6925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
6927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC2M;
6928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
6929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Output Compare Mode */
6931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
6932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Polarity level */
6934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
6935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
6937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
6939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
6941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N Polarity level */
6943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
6944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Polarity */
6945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
6946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N State */
6947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
6948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
6951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
6952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Check parameters */
ARM GAS  /tmp/ccFOYGRW.s 			page 126


6953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
6954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
6955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
6957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2;
6958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
6959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output Idle state */
6960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
6961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Idle state */
6962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
6963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
6964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CR2 */
6966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
6967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
6969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
6970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
6973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCER */
6975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
6976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
6977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
6979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Timer Output Compare 3 configuration
6980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
6983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
6984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 177              		.loc 1 6985 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              		.loc 1 6985 1 is_stmt 0 view .LVU60
 183 0000 30B4     		push	{r4, r5}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 5, -4
6986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmrx;
 188              		.loc 1 6986 3 is_stmt 1 view .LVU61
6987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 189              		.loc 1 6987 3 view .LVU62
6988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr2;
 190              		.loc 1 6988 3 view .LVU63
6989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 191              		.loc 1 6991 3 view .LVU64
 192              		.loc 1 6991 11 is_stmt 0 view .LVU65
 193 0002 036A     		ldr	r3, [r0, #32]
 194              	.LVL18:
ARM GAS  /tmp/ccFOYGRW.s 			page 127


6992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
6994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 195              		.loc 1 6994 3 is_stmt 1 view .LVU66
 196              		.loc 1 6994 7 is_stmt 0 view .LVU67
 197 0004 026A     		ldr	r2, [r0, #32]
 198              		.loc 1 6994 14 view .LVU68
 199 0006 22F48072 		bic	r2, r2, #256
 200 000a 0262     		str	r2, [r0, #32]
6995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 201              		.loc 1 6997 3 is_stmt 1 view .LVU69
 202              		.loc 1 6997 10 is_stmt 0 view .LVU70
 203 000c 4268     		ldr	r2, [r0, #4]
 204              	.LVL19:
6998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
6999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
7000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 205              		.loc 1 7000 3 is_stmt 1 view .LVU71
 206              		.loc 1 7000 12 is_stmt 0 view .LVU72
 207 000e C469     		ldr	r4, [r0, #28]
 208              	.LVL20:
7001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
7003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC3M;
 209              		.loc 1 7003 3 is_stmt 1 view .LVU73
7004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;
 210              		.loc 1 7004 3 view .LVU74
 211              		.loc 1 7004 12 is_stmt 0 view .LVU75
 212 0010 24F0730C 		bic	ip, r4, #115
 213              	.LVL21:
7005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Output Compare Mode */
7006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 214              		.loc 1 7006 3 is_stmt 1 view .LVU76
 215              		.loc 1 7006 24 is_stmt 0 view .LVU77
 216 0014 0C68     		ldr	r4, [r1]
 217              		.loc 1 7006 12 view .LVU78
 218 0016 44EA0C05 		orr	r5, r4, ip
 219              	.LVL22:
7007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Polarity level */
7009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
 220              		.loc 1 7009 3 is_stmt 1 view .LVU79
 221              		.loc 1 7009 11 is_stmt 0 view .LVU80
 222 001a 23F40073 		bic	r3, r3, #512
 223              	.LVL23:
7010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Output Compare Polarity */
7011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
 224              		.loc 1 7011 3 is_stmt 1 view .LVU81
 225              		.loc 1 7011 24 is_stmt 0 view .LVU82
 226 001e 8C68     		ldr	r4, [r1, #8]
 227              		.loc 1 7011 11 view .LVU83
 228 0020 43EA0423 		orr	r3, r3, r4, lsl #8
 229              	.LVL24:
7012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
ARM GAS  /tmp/ccFOYGRW.s 			page 128


 230              		.loc 1 7013 3 is_stmt 1 view .LVU84
 231              		.loc 1 7013 6 is_stmt 0 view .LVU85
 232 0024 114C     		ldr	r4, .L15
 233 0026 A042     		cmp	r0, r4
 234 0028 03D0     		beq	.L10
 235              		.loc 1 7013 7 discriminator 1 view .LVU86
 236 002a 04F58064 		add	r4, r4, #1024
 237 002e A042     		cmp	r0, r4
 238 0030 06D1     		bne	.L11
 239              	.L10:
7014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
7015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
 240              		.loc 1 7015 5 is_stmt 1 view .LVU87
7016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N Polarity level */
7018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
 241              		.loc 1 7018 5 view .LVU88
 242              		.loc 1 7018 13 is_stmt 0 view .LVU89
 243 0032 23F40063 		bic	r3, r3, #2048
 244              	.LVL25:
7019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Polarity */
7020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
 245              		.loc 1 7020 5 is_stmt 1 view .LVU90
 246              		.loc 1 7020 26 is_stmt 0 view .LVU91
 247 0036 CC68     		ldr	r4, [r1, #12]
 248              		.loc 1 7020 13 view .LVU92
 249 0038 43EA0423 		orr	r3, r3, r4, lsl #8
 250              	.LVL26:
7021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output N State */
7022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
 251              		.loc 1 7022 5 is_stmt 1 view .LVU93
 252              		.loc 1 7022 13 is_stmt 0 view .LVU94
 253 003c 23F48063 		bic	r3, r3, #1024
 254              	.LVL27:
 255              	.L11:
7023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 256              		.loc 1 7025 3 is_stmt 1 view .LVU95
 257              		.loc 1 7025 6 is_stmt 0 view .LVU96
 258 0040 0A4C     		ldr	r4, .L15
 259 0042 A042     		cmp	r0, r4
 260 0044 03D0     		beq	.L12
 261              		.loc 1 7025 7 discriminator 1 view .LVU97
 262 0046 04F58064 		add	r4, r4, #1024
 263 004a A042     		cmp	r0, r4
 264 004c 07D1     		bne	.L13
 265              	.L12:
7026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
7027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Check parameters */
7028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 266              		.loc 1 7028 5 is_stmt 1 view .LVU98
7029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 267              		.loc 1 7029 5 view .LVU99
7030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
7032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3;
ARM GAS  /tmp/ccFOYGRW.s 			page 129


 268              		.loc 1 7032 5 view .LVU100
 269              	.LVL28:
7033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
 270              		.loc 1 7033 5 view .LVU101
 271              		.loc 1 7033 12 is_stmt 0 view .LVU102
 272 004e 22F44052 		bic	r2, r2, #12288
 273              	.LVL29:
7034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output Idle state */
7035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
 274              		.loc 1 7035 5 is_stmt 1 view .LVU103
 275              		.loc 1 7035 25 is_stmt 0 view .LVU104
 276 0052 4C69     		ldr	r4, [r1, #20]
 277              		.loc 1 7035 12 view .LVU105
 278 0054 42EA0412 		orr	r2, r2, r4, lsl #4
 279              	.LVL30:
7036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output N Idle state */
7037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 280              		.loc 1 7037 5 is_stmt 1 view .LVU106
 281              		.loc 1 7037 25 is_stmt 0 view .LVU107
 282 0058 8C69     		ldr	r4, [r1, #24]
 283              		.loc 1 7037 12 view .LVU108
 284 005a 42EA0412 		orr	r2, r2, r4, lsl #4
 285              	.LVL31:
 286              	.L13:
7038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CR2 */
7041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 287              		.loc 1 7041 3 is_stmt 1 view .LVU109
 288              		.loc 1 7041 13 is_stmt 0 view .LVU110
 289 005e 4260     		str	r2, [r0, #4]
7042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
7044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 290              		.loc 1 7044 3 is_stmt 1 view .LVU111
 291              		.loc 1 7044 15 is_stmt 0 view .LVU112
 292 0060 C561     		str	r5, [r0, #28]
7045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Capture Compare Register value */
7047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
 293              		.loc 1 7047 3 is_stmt 1 view .LVU113
 294              		.loc 1 7047 25 is_stmt 0 view .LVU114
 295 0062 4A68     		ldr	r2, [r1, #4]
 296              	.LVL32:
 297              		.loc 1 7047 14 view .LVU115
 298 0064 C263     		str	r2, [r0, #60]
7048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCER */
7050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 299              		.loc 1 7050 3 is_stmt 1 view .LVU116
 300              		.loc 1 7050 14 is_stmt 0 view .LVU117
 301 0066 0362     		str	r3, [r0, #32]
7051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 302              		.loc 1 7051 1 view .LVU118
 303 0068 30BC     		pop	{r4, r5}
 304              	.LCFI3:
 305              		.cfi_restore 5
ARM GAS  /tmp/ccFOYGRW.s 			page 130


 306              		.cfi_restore 4
 307              		.cfi_def_cfa_offset 0
 308              	.LVL33:
 309              		.loc 1 7051 1 view .LVU119
 310 006a 7047     		bx	lr
 311              	.L16:
 312              		.align	2
 313              	.L15:
 314 006c 00000140 		.word	1073807360
 315              		.cfi_endproc
 316              	.LFE241:
 318              		.section	.text.TIM_OC4_SetConfig,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	TIM_OC4_SetConfig:
 325              	.LVL34:
 326              	.LFB242:
7052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Timer Output Compare 4 configuration
7055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
7057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
7060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 327              		.loc 1 7060 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332              		.loc 1 7060 1 is_stmt 0 view .LVU121
 333 0000 30B4     		push	{r4, r5}
 334              	.LCFI4:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 5, -4
7061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmrx;
 338              		.loc 1 7061 3 is_stmt 1 view .LVU122
7062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 339              		.loc 1 7062 3 view .LVU123
7063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpcr2;
 340              		.loc 1 7063 3 view .LVU124
7064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCER register value */
7066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 341              		.loc 1 7066 3 view .LVU125
 342              		.loc 1 7066 11 is_stmt 0 view .LVU126
 343 0002 036A     		ldr	r3, [r0, #32]
 344              	.LVL35:
7067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
7069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 345              		.loc 1 7069 3 is_stmt 1 view .LVU127
 346              		.loc 1 7069 7 is_stmt 0 view .LVU128
ARM GAS  /tmp/ccFOYGRW.s 			page 131


 347 0004 026A     		ldr	r2, [r0, #32]
 348              		.loc 1 7069 14 view .LVU129
 349 0006 22F48052 		bic	r2, r2, #4096
 350 000a 0262     		str	r2, [r0, #32]
7070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
7072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 351              		.loc 1 7072 3 is_stmt 1 view .LVU130
 352              		.loc 1 7072 10 is_stmt 0 view .LVU131
 353 000c 4468     		ldr	r4, [r0, #4]
 354              	.LVL36:
7073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
7075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 355              		.loc 1 7075 3 is_stmt 1 view .LVU132
 356              		.loc 1 7075 12 is_stmt 0 view .LVU133
 357 000e C269     		ldr	r2, [r0, #28]
 358              	.LVL37:
7076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
7078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC4M;
 359              		.loc 1 7078 3 is_stmt 1 view .LVU134
7079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
 360              		.loc 1 7079 3 view .LVU135
 361              		.loc 1 7079 12 is_stmt 0 view .LVU136
 362 0010 22F4E642 		bic	r2, r2, #29440
 363              	.LVL38:
7080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Output Compare Mode */
7082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 364              		.loc 1 7082 3 is_stmt 1 view .LVU137
 365              		.loc 1 7082 25 is_stmt 0 view .LVU138
 366 0014 0D68     		ldr	r5, [r1]
 367              		.loc 1 7082 12 view .LVU139
 368 0016 42EA0522 		orr	r2, r2, r5, lsl #8
 369              	.LVL39:
7083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Output Polarity level */
7085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
 370              		.loc 1 7085 3 is_stmt 1 view .LVU140
 371              		.loc 1 7085 11 is_stmt 0 view .LVU141
 372 001a 23F40053 		bic	r3, r3, #8192
 373              	.LVL40:
7086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Output Compare Polarity */
7087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
 374              		.loc 1 7087 3 is_stmt 1 view .LVU142
 375              		.loc 1 7087 24 is_stmt 0 view .LVU143
 376 001e 8D68     		ldr	r5, [r1, #8]
 377              		.loc 1 7087 11 view .LVU144
 378 0020 43EA0533 		orr	r3, r3, r5, lsl #12
 379              	.LVL41:
7088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 380              		.loc 1 7089 3 is_stmt 1 view .LVU145
 381              		.loc 1 7089 6 is_stmt 0 view .LVU146
 382 0024 094D     		ldr	r5, .L21
 383 0026 A842     		cmp	r0, r5
ARM GAS  /tmp/ccFOYGRW.s 			page 132


 384 0028 03D0     		beq	.L18
 385              		.loc 1 7089 7 discriminator 1 view .LVU147
 386 002a 05F58065 		add	r5, r5, #1024
 387 002e A842     		cmp	r0, r5
 388 0030 04D1     		bne	.L19
 389              	.L18:
7090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
7091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Check parameters */
7092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 390              		.loc 1 7092 5 is_stmt 1 view .LVU148
7093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Reset the Output Compare IDLE State */
7095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
 391              		.loc 1 7095 5 view .LVU149
 392              		.loc 1 7095 12 is_stmt 0 view .LVU150
 393 0032 24F48044 		bic	r4, r4, #16384
 394              	.LVL42:
7096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     /* Set the Output Idle state */
7098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
 395              		.loc 1 7098 5 is_stmt 1 view .LVU151
 396              		.loc 1 7098 25 is_stmt 0 view .LVU152
 397 0036 4D69     		ldr	r5, [r1, #20]
 398              		.loc 1 7098 12 view .LVU153
 399 0038 44EA8514 		orr	r4, r4, r5, lsl #6
 400              	.LVL43:
 401              	.L19:
7099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CR2 */
7102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 402              		.loc 1 7102 3 is_stmt 1 view .LVU154
 403              		.loc 1 7102 13 is_stmt 0 view .LVU155
 404 003c 4460     		str	r4, [r0, #4]
7103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
7105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 405              		.loc 1 7105 3 is_stmt 1 view .LVU156
 406              		.loc 1 7105 15 is_stmt 0 view .LVU157
 407 003e C261     		str	r2, [r0, #28]
7106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Capture Compare Register value */
7108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
 408              		.loc 1 7108 3 is_stmt 1 view .LVU158
 409              		.loc 1 7108 25 is_stmt 0 view .LVU159
 410 0040 4A68     		ldr	r2, [r1, #4]
 411              	.LVL44:
 412              		.loc 1 7108 14 view .LVU160
 413 0042 0264     		str	r2, [r0, #64]
 414              	.LVL45:
7109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCER */
7111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 415              		.loc 1 7111 3 is_stmt 1 view .LVU161
 416              		.loc 1 7111 14 is_stmt 0 view .LVU162
 417 0044 0362     		str	r3, [r0, #32]
7112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
ARM GAS  /tmp/ccFOYGRW.s 			page 133


 418              		.loc 1 7112 1 view .LVU163
 419 0046 30BC     		pop	{r4, r5}
 420              	.LCFI5:
 421              		.cfi_restore 5
 422              		.cfi_restore 4
 423              		.cfi_def_cfa_offset 0
 424              	.LVL46:
 425              		.loc 1 7112 1 view .LVU164
 426 0048 7047     		bx	lr
 427              	.L22:
 428 004a 00BF     		.align	2
 429              	.L21:
 430 004c 00000140 		.word	1073807360
 431              		.cfi_endproc
 432              	.LFE242:
 434              		.section	.text.TIM_TI1_ConfigInputStage,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	TIM_TI1_ConfigInputStage:
 441              	.LVL47:
 442              	.LFB245:
7113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Slave Timer configuration function
7116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  htim TIM handle
7117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  sSlaveConfig Slave timer configuration
7118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
7121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                                   const TIM_SlaveConfigTypeDef *sSlaveConfig)
7122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
7123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
7124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
7125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
7126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
7127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
7129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
7130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the Trigger Selection Bits */
7132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
7133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Input Trigger source */
7134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
7135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the slave mode Bits */
7137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
7138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the slave mode */
7139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
7140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx SMCR */
7142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
7143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Configure the trigger prescaler, filter, and polarity */
7145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
7146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 134


7147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_ETRF:
7148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
7149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
7150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
7151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPRESCALER(sSlaveConfig->TriggerPrescaler));
7152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure the ETR Trigger source */
7155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
7156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
7157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sSlaveConfig->TriggerPolarity,
7158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                         sSlaveConfig->TriggerFilter);
7159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
7161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_TI1F_ED:
7163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
7164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
7165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
7166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
7169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       {
7170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****         return HAL_ERROR;
7171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       }
7172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Disable the Channel 1: Reset the CC1E Bit */
7174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
7175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
7176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
7177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Set the filter */
7179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
7180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
7181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Write to TIMx CCMR1 and CCER registers */
7183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
7184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;
7185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
7187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_TI1FP1:
7189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
7190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
7191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
7192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure TI1 Filter and Polarity */
7196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
7197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
7198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
7199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
7201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_TI2FP2:
7203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
ARM GAS  /tmp/ccFOYGRW.s 			page 135


7204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameters */
7205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
7206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Configure TI2 Filter and Polarity */
7210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
7211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
7212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
7213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
7215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_ITR0:
7217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_ITR1:
7218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_ITR2:
7219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     case TIM_TS_ITR3:
7220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
7221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       /* Check the parameter */
7222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
7223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
7225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     default:
7227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       status = HAL_ERROR;
7228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****       break;
7229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   return status;
7232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
7233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the TI1 as Input.
7236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 1 is selected to be connected to IC1.
7245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 1 is selected to be connected to IC2.
7246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 1 is selected to be connected to TRC.
7247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI2FP1
7251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
7252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
7256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
7257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
7258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
7259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
ARM GAS  /tmp/ccFOYGRW.s 			page 136


7261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
7262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
7263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
7264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Input */
7266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
7267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
7268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
7269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
7270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   else
7272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
7273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
7274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
7275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
7278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
7279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
7281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
7282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
7283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
7286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
7287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
7288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI1.
7291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
7302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 443              		.loc 1 7302 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448              		.loc 1 7302 1 is_stmt 0 view .LVU166
 449 0000 10B4     		push	{r4}
 450              	.LCFI6:
 451              		.cfi_def_cfa_offset 4
 452              		.cfi_offset 4, -4
7303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
 453              		.loc 1 7303 3 is_stmt 1 view .LVU167
7304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 454              		.loc 1 7304 3 view .LVU168
7305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 137


7306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
7307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 455              		.loc 1 7307 3 view .LVU169
 456              		.loc 1 7307 11 is_stmt 0 view .LVU170
 457 0002 036A     		ldr	r3, [r0, #32]
 458              	.LVL48:
7308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 459              		.loc 1 7308 3 is_stmt 1 view .LVU171
 460              		.loc 1 7308 7 is_stmt 0 view .LVU172
 461 0004 046A     		ldr	r4, [r0, #32]
 462              		.loc 1 7308 14 view .LVU173
 463 0006 24F00104 		bic	r4, r4, #1
 464 000a 0462     		str	r4, [r0, #32]
7309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 465              		.loc 1 7309 3 is_stmt 1 view .LVU174
 466              		.loc 1 7309 12 is_stmt 0 view .LVU175
 467 000c 8469     		ldr	r4, [r0, #24]
 468              	.LVL49:
7310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 469              		.loc 1 7312 3 is_stmt 1 view .LVU176
 470              		.loc 1 7312 12 is_stmt 0 view .LVU177
 471 000e 24F0F00C 		bic	ip, r4, #240
 472              	.LVL50:
7313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 473              		.loc 1 7313 3 is_stmt 1 view .LVU178
 474              		.loc 1 7313 12 is_stmt 0 view .LVU179
 475 0012 4CEA0212 		orr	r2, ip, r2, lsl #4
 476              	.LVL51:
7314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
7316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 477              		.loc 1 7316 3 is_stmt 1 view .LVU180
 478              		.loc 1 7316 11 is_stmt 0 view .LVU181
 479 0016 23F00A03 		bic	r3, r3, #10
 480              	.LVL52:
7317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 481              		.loc 1 7317 3 is_stmt 1 view .LVU182
 482              		.loc 1 7317 11 is_stmt 0 view .LVU183
 483 001a 0B43     		orrs	r3, r3, r1
 484              	.LVL53:
7318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 485              		.loc 1 7320 3 is_stmt 1 view .LVU184
 486              		.loc 1 7320 15 is_stmt 0 view .LVU185
 487 001c 8261     		str	r2, [r0, #24]
7321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 488              		.loc 1 7321 3 is_stmt 1 view .LVU186
 489              		.loc 1 7321 14 is_stmt 0 view .LVU187
 490 001e 0362     		str	r3, [r0, #32]
7322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 491              		.loc 1 7322 1 view .LVU188
 492 0020 5DF8044B 		ldr	r4, [sp], #4
 493              	.LCFI7:
 494              		.cfi_restore 4
ARM GAS  /tmp/ccFOYGRW.s 			page 138


 495              		.cfi_def_cfa_offset 0
 496 0024 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE245:
 500              		.section	.text.TIM_TI2_SetConfig,"ax",%progbits
 501              		.align	1
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	TIM_TI2_SetConfig:
 507              	.LVL54:
 508              	.LFB246:
7323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the TI2 as Input.
7326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 2 is selected to be connected to IC2.
7335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 2 is selected to be connected to IC1.
7336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 2 is selected to be connected to TRC.
7337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI1FP2
7341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
7342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 509              		.loc 1 7346 1 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              		.loc 1 7346 1 is_stmt 0 view .LVU190
 515 0000 30B4     		push	{r4, r5}
 516              	.LCFI8:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 4, -8
 519              		.cfi_offset 5, -4
7347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
 520              		.loc 1 7347 3 is_stmt 1 view .LVU191
7348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 521              		.loc 1 7348 3 view .LVU192
7349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
7351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 522              		.loc 1 7351 3 view .LVU193
 523              		.loc 1 7351 11 is_stmt 0 view .LVU194
 524 0002 056A     		ldr	r5, [r0, #32]
ARM GAS  /tmp/ccFOYGRW.s 			page 139


 525              	.LVL55:
7352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 526              		.loc 1 7352 3 is_stmt 1 view .LVU195
 527              		.loc 1 7352 7 is_stmt 0 view .LVU196
 528 0004 046A     		ldr	r4, [r0, #32]
 529              		.loc 1 7352 14 view .LVU197
 530 0006 24F01004 		bic	r4, r4, #16
 531 000a 0462     		str	r4, [r0, #32]
7353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 532              		.loc 1 7353 3 is_stmt 1 view .LVU198
 533              		.loc 1 7353 12 is_stmt 0 view .LVU199
 534 000c 8469     		ldr	r4, [r0, #24]
 535              	.LVL56:
7354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Input */
7356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_CC2S;
 536              		.loc 1 7356 3 is_stmt 1 view .LVU200
 537              		.loc 1 7356 12 is_stmt 0 view .LVU201
 538 000e 24F4407C 		bic	ip, r4, #768
 539              	.LVL57:
7357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 540              		.loc 1 7357 3 is_stmt 1 view .LVU202
 541              		.loc 1 7357 12 is_stmt 0 view .LVU203
 542 0012 4CEA022C 		orr	ip, ip, r2, lsl #8
 543              	.LVL58:
7358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 544              		.loc 1 7360 3 is_stmt 1 view .LVU204
 545              		.loc 1 7360 12 is_stmt 0 view .LVU205
 546 0016 2CF4704C 		bic	ip, ip, #61440
 547              	.LVL59:
7361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 548              		.loc 1 7361 3 is_stmt 1 view .LVU206
 549              		.loc 1 7361 30 is_stmt 0 view .LVU207
 550 001a 1B03     		lsls	r3, r3, #12
 551              	.LVL60:
 552              		.loc 1 7361 38 view .LVU208
 553 001c 9BB2     		uxth	r3, r3
 554              		.loc 1 7361 12 view .LVU209
 555 001e 43EA0C03 		orr	r3, r3, ip
 556              	.LVL61:
7362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
7364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 557              		.loc 1 7364 3 is_stmt 1 view .LVU210
 558              		.loc 1 7364 11 is_stmt 0 view .LVU211
 559 0022 25F0A005 		bic	r5, r5, #160
 560              	.LVL62:
7365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 561              		.loc 1 7365 3 is_stmt 1 view .LVU212
 562              		.loc 1 7365 31 is_stmt 0 view .LVU213
 563 0026 0901     		lsls	r1, r1, #4
 564              	.LVL63:
 565              		.loc 1 7365 38 view .LVU214
 566 0028 01F0A001 		and	r1, r1, #160
 567              		.loc 1 7365 11 view .LVU215
ARM GAS  /tmp/ccFOYGRW.s 			page 140


 568 002c 2943     		orrs	r1, r1, r5
 569              	.LVL64:
7366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 570              		.loc 1 7368 3 is_stmt 1 view .LVU216
 571              		.loc 1 7368 15 is_stmt 0 view .LVU217
 572 002e 8361     		str	r3, [r0, #24]
7369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 573              		.loc 1 7369 3 is_stmt 1 view .LVU218
 574              		.loc 1 7369 14 is_stmt 0 view .LVU219
 575 0030 0162     		str	r1, [r0, #32]
7370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 576              		.loc 1 7370 1 view .LVU220
 577 0032 30BC     		pop	{r4, r5}
 578              	.LCFI9:
 579              		.cfi_restore 5
 580              		.cfi_restore 4
 581              		.cfi_def_cfa_offset 0
 582 0034 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE246:
 586              		.section	.text.TIM_TI2_ConfigInputStage,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	TIM_TI2_ConfigInputStage:
 593              	.LVL65:
 594              	.LFB247:
7371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI2.
7374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
7385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 595              		.loc 1 7385 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              		.loc 1 7385 1 is_stmt 0 view .LVU222
 601 0000 10B4     		push	{r4}
 602              	.LCFI10:
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 4, -4
7386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr1;
 605              		.loc 1 7386 3 is_stmt 1 view .LVU223
ARM GAS  /tmp/ccFOYGRW.s 			page 141


7387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 606              		.loc 1 7387 3 view .LVU224
7388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
7390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 607              		.loc 1 7390 3 view .LVU225
 608              		.loc 1 7390 11 is_stmt 0 view .LVU226
 609 0002 036A     		ldr	r3, [r0, #32]
 610              	.LVL66:
7391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 611              		.loc 1 7391 3 is_stmt 1 view .LVU227
 612              		.loc 1 7391 7 is_stmt 0 view .LVU228
 613 0004 046A     		ldr	r4, [r0, #32]
 614              		.loc 1 7391 14 view .LVU229
 615 0006 24F01004 		bic	r4, r4, #16
 616 000a 0462     		str	r4, [r0, #32]
7392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 617              		.loc 1 7392 3 is_stmt 1 view .LVU230
 618              		.loc 1 7392 12 is_stmt 0 view .LVU231
 619 000c 8469     		ldr	r4, [r0, #24]
 620              	.LVL67:
7393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 621              		.loc 1 7395 3 is_stmt 1 view .LVU232
 622              		.loc 1 7395 12 is_stmt 0 view .LVU233
 623 000e 24F4704C 		bic	ip, r4, #61440
 624              	.LVL68:
7396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 625              		.loc 1 7396 3 is_stmt 1 view .LVU234
 626              		.loc 1 7396 12 is_stmt 0 view .LVU235
 627 0012 4CEA0232 		orr	r2, ip, r2, lsl #12
 628              	.LVL69:
7397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
7399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 629              		.loc 1 7399 3 is_stmt 1 view .LVU236
 630              		.loc 1 7399 11 is_stmt 0 view .LVU237
 631 0016 23F0A003 		bic	r3, r3, #160
 632              	.LVL70:
7400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 633              		.loc 1 7400 3 is_stmt 1 view .LVU238
 634              		.loc 1 7400 11 is_stmt 0 view .LVU239
 635 001a 43EA0113 		orr	r3, r3, r1, lsl #4
 636              	.LVL71:
7401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 637              		.loc 1 7403 3 is_stmt 1 view .LVU240
 638              		.loc 1 7403 15 is_stmt 0 view .LVU241
 639 001e 8261     		str	r2, [r0, #24]
7404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 640              		.loc 1 7404 3 is_stmt 1 view .LVU242
 641              		.loc 1 7404 14 is_stmt 0 view .LVU243
 642 0020 0362     		str	r3, [r0, #32]
7405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 643              		.loc 1 7405 1 view .LVU244
ARM GAS  /tmp/ccFOYGRW.s 			page 142


 644 0022 5DF8044B 		ldr	r4, [sp], #4
 645              	.LCFI11:
 646              		.cfi_restore 4
 647              		.cfi_def_cfa_offset 0
 648 0026 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE247:
 652              		.section	.text.TIM_TI3_SetConfig,"ax",%progbits
 653              		.align	1
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 658              	TIM_TI3_SetConfig:
 659              	.LVL72:
 660              	.LFB248:
7406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the TI3 as Input.
7409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 3 is selected to be connected to IC3.
7418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 3 is selected to be connected to IC4.
7419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 3 is selected to be connected to TRC.
7420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI3FP4
7424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
7425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 661              		.loc 1 7429 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              		.loc 1 7429 1 is_stmt 0 view .LVU246
 667 0000 30B4     		push	{r4, r5}
 668              	.LCFI12:
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 4, -8
 671              		.cfi_offset 5, -4
7430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr2;
 672              		.loc 1 7430 3 is_stmt 1 view .LVU247
7431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 673              		.loc 1 7431 3 view .LVU248
7432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
7434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
ARM GAS  /tmp/ccFOYGRW.s 			page 143


 674              		.loc 1 7434 3 view .LVU249
 675              		.loc 1 7434 11 is_stmt 0 view .LVU250
 676 0002 056A     		ldr	r5, [r0, #32]
 677              	.LVL73:
7435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 678              		.loc 1 7435 3 is_stmt 1 view .LVU251
 679              		.loc 1 7435 7 is_stmt 0 view .LVU252
 680 0004 046A     		ldr	r4, [r0, #32]
 681              		.loc 1 7435 14 view .LVU253
 682 0006 24F48074 		bic	r4, r4, #256
 683 000a 0462     		str	r4, [r0, #32]
7436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 684              		.loc 1 7436 3 is_stmt 1 view .LVU254
 685              		.loc 1 7436 12 is_stmt 0 view .LVU255
 686 000c C469     		ldr	r4, [r0, #28]
 687              	.LVL74:
7437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Input */
7439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC3S;
 688              		.loc 1 7439 3 is_stmt 1 view .LVU256
 689              		.loc 1 7439 12 is_stmt 0 view .LVU257
 690 000e 24F0030C 		bic	ip, r4, #3
 691              	.LVL75:
7440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
 692              		.loc 1 7440 3 is_stmt 1 view .LVU258
 693              		.loc 1 7440 12 is_stmt 0 view .LVU259
 694 0012 4CEA020C 		orr	ip, ip, r2
 695              	.LVL76:
7441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC3F;
 696              		.loc 1 7443 3 is_stmt 1 view .LVU260
 697              		.loc 1 7443 12 is_stmt 0 view .LVU261
 698 0016 2CF0F00C 		bic	ip, ip, #240
 699              	.LVL77:
7444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 700              		.loc 1 7444 3 is_stmt 1 view .LVU262
 701              		.loc 1 7444 30 is_stmt 0 view .LVU263
 702 001a 1B01     		lsls	r3, r3, #4
 703              	.LVL78:
 704              		.loc 1 7444 37 view .LVU264
 705 001c DBB2     		uxtb	r3, r3
 706              		.loc 1 7444 12 view .LVU265
 707 001e 43EA0C03 		orr	r3, r3, ip
 708              	.LVL79:
7445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC3E Bit */
7447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 709              		.loc 1 7447 3 is_stmt 1 view .LVU266
 710              		.loc 1 7447 11 is_stmt 0 view .LVU267
 711 0022 25F42065 		bic	r5, r5, #2560
 712              	.LVL80:
7448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 713              		.loc 1 7448 3 is_stmt 1 view .LVU268
 714              		.loc 1 7448 31 is_stmt 0 view .LVU269
 715 0026 0902     		lsls	r1, r1, #8
 716              	.LVL81:
ARM GAS  /tmp/ccFOYGRW.s 			page 144


 717              		.loc 1 7448 38 view .LVU270
 718 0028 01F42061 		and	r1, r1, #2560
 719              		.loc 1 7448 11 view .LVU271
 720 002c 2943     		orrs	r1, r1, r5
 721              	.LVL82:
7449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
7451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 722              		.loc 1 7451 3 is_stmt 1 view .LVU272
 723              		.loc 1 7451 15 is_stmt 0 view .LVU273
 724 002e C361     		str	r3, [r0, #28]
7452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 725              		.loc 1 7452 3 is_stmt 1 view .LVU274
 726              		.loc 1 7452 14 is_stmt 0 view .LVU275
 727 0030 0162     		str	r1, [r0, #32]
7453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 728              		.loc 1 7453 1 view .LVU276
 729 0032 30BC     		pop	{r4, r5}
 730              	.LCFI13:
 731              		.cfi_restore 5
 732              		.cfi_restore 4
 733              		.cfi_def_cfa_offset 0
 734 0034 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE248:
 738              		.section	.text.TIM_TI4_SetConfig,"ax",%progbits
 739              		.align	1
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 744              	TIM_TI4_SetConfig:
 745              	.LVL83:
 746              	.LFB249:
7454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Configure the TI4 as Input.
7457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
7465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 4 is selected to be connected to IC4.
7466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 4 is selected to be connected to IC3.
7467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 4 is selected to be connected to TRC.
7468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI4FP3
7471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
7472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
ARM GAS  /tmp/ccFOYGRW.s 			page 145


 747              		.loc 1 7477 1 is_stmt 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              		.loc 1 7477 1 is_stmt 0 view .LVU278
 753 0000 30B4     		push	{r4, r5}
 754              	.LCFI14:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 4, -8
 757              		.cfi_offset 5, -4
7478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccmr2;
 758              		.loc 1 7478 3 is_stmt 1 view .LVU279
7479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpccer;
 759              		.loc 1 7479 3 view .LVU280
7480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
7482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 760              		.loc 1 7482 3 view .LVU281
 761              		.loc 1 7482 11 is_stmt 0 view .LVU282
 762 0002 056A     		ldr	r5, [r0, #32]
 763              	.LVL84:
7483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 764              		.loc 1 7483 3 is_stmt 1 view .LVU283
 765              		.loc 1 7483 7 is_stmt 0 view .LVU284
 766 0004 046A     		ldr	r4, [r0, #32]
 767              		.loc 1 7483 14 view .LVU285
 768 0006 24F48054 		bic	r4, r4, #4096
 769 000a 0462     		str	r4, [r0, #32]
7484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 770              		.loc 1 7484 3 is_stmt 1 view .LVU286
 771              		.loc 1 7484 12 is_stmt 0 view .LVU287
 772 000c C469     		ldr	r4, [r0, #28]
 773              	.LVL85:
7485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Input */
7487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC4S;
 774              		.loc 1 7487 3 is_stmt 1 view .LVU288
 775              		.loc 1 7487 12 is_stmt 0 view .LVU289
 776 000e 24F4407C 		bic	ip, r4, #768
 777              	.LVL86:
7488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
 778              		.loc 1 7488 3 is_stmt 1 view .LVU290
 779              		.loc 1 7488 12 is_stmt 0 view .LVU291
 780 0012 4CEA022C 		orr	ip, ip, r2, lsl #8
 781              	.LVL87:
7489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the filter */
7491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC4F;
 782              		.loc 1 7491 3 is_stmt 1 view .LVU292
 783              		.loc 1 7491 12 is_stmt 0 view .LVU293
 784 0016 2CF4704C 		bic	ip, ip, #61440
 785              	.LVL88:
7492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 786              		.loc 1 7492 3 is_stmt 1 view .LVU294
 787              		.loc 1 7492 30 is_stmt 0 view .LVU295
 788 001a 1B03     		lsls	r3, r3, #12
ARM GAS  /tmp/ccFOYGRW.s 			page 146


 789              	.LVL89:
 790              		.loc 1 7492 38 view .LVU296
 791 001c 9BB2     		uxth	r3, r3
 792              		.loc 1 7492 12 view .LVU297
 793 001e 43EA0C03 		orr	r3, r3, ip
 794              	.LVL90:
7493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Select the Polarity and set the CC4E Bit */
7495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 795              		.loc 1 7495 3 is_stmt 1 view .LVU298
 796              		.loc 1 7495 11 is_stmt 0 view .LVU299
 797 0022 25F42045 		bic	r5, r5, #40960
 798              	.LVL91:
7496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 799              		.loc 1 7496 3 is_stmt 1 view .LVU300
 800              		.loc 1 7496 31 is_stmt 0 view .LVU301
 801 0026 0903     		lsls	r1, r1, #12
 802              	.LVL92:
 803              		.loc 1 7496 39 view .LVU302
 804 0028 01F42041 		and	r1, r1, #40960
 805              		.loc 1 7496 11 view .LVU303
 806 002c 2943     		orrs	r1, r1, r5
 807              	.LVL93:
7497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
7499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 808              		.loc 1 7499 3 is_stmt 1 view .LVU304
 809              		.loc 1 7499 15 is_stmt 0 view .LVU305
 810 002e C361     		str	r3, [r0, #28]
7500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
 811              		.loc 1 7500 3 is_stmt 1 view .LVU306
 812              		.loc 1 7500 14 is_stmt 0 view .LVU307
 813 0030 0162     		str	r1, [r0, #32]
7501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 814              		.loc 1 7501 1 view .LVU308
 815 0032 30BC     		pop	{r4, r5}
 816              	.LCFI15:
 817              		.cfi_restore 5
 818              		.cfi_restore 4
 819              		.cfi_def_cfa_offset 0
 820 0034 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE249:
 824              		.section	.text.TIM_ITRx_SetConfig,"ax",%progbits
 825              		.align	1
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 830              	TIM_ITRx_SetConfig:
 831              	.LVL94:
 832              	.LFB250:
7502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** /**
7504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @brief  Selects the Input Trigger source
7505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @param  InputTriggerSource The Input Trigger source.
7507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccFOYGRW.s 			page 147


7508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
7509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
7510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
7511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
7512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
7513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
7514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
7515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
7516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   * @retval None
7517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   */
7518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
7519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** {
 833              		.loc 1 7519 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
7520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 838              		.loc 1 7520 3 view .LVU310
7521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
7522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
7523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
 839              		.loc 1 7523 3 view .LVU311
 840              		.loc 1 7523 11 is_stmt 0 view .LVU312
 841 0000 8368     		ldr	r3, [r0, #8]
 842              	.LVL95:
7524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Reset the TS Bits */
7525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
 843              		.loc 1 7525 3 is_stmt 1 view .LVU313
 844              		.loc 1 7525 11 is_stmt 0 view .LVU314
 845 0002 23F07003 		bic	r3, r3, #112
 846              	.LVL96:
7526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
7527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 847              		.loc 1 7527 3 is_stmt 1 view .LVU315
 848              		.loc 1 7527 11 is_stmt 0 view .LVU316
 849 0006 0B43     		orrs	r3, r3, r1
 850              	.LVL97:
 851              		.loc 1 7527 11 view .LVU317
 852 0008 43F00703 		orr	r3, r3, #7
 853              	.LVL98:
7528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Write to TIMx SMCR */
7529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
 854              		.loc 1 7529 3 is_stmt 1 view .LVU318
 855              		.loc 1 7529 14 is_stmt 0 view .LVU319
 856 000c 8360     		str	r3, [r0, #8]
7530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 857              		.loc 1 7530 1 view .LVU320
 858 000e 7047     		bx	lr
 859              		.cfi_endproc
 860              	.LFE250:
 862              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 863              		.align	1
 864              		.weak	HAL_TIM_Base_MspInit
 865              		.syntax unified
 866              		.thumb
 867              		.thumb_func
ARM GAS  /tmp/ccFOYGRW.s 			page 148


 869              	HAL_TIM_Base_MspInit:
 870              	.LVL99:
 871              	.LFB136:
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 872              		.loc 1 370 1 is_stmt 1 view -0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 877              		.loc 1 372 3 view .LVU322
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 878              		.loc 1 377 1 is_stmt 0 view .LVU323
 879 0000 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE136:
 883              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 884              		.align	1
 885              		.weak	HAL_TIM_Base_MspDeInit
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 890              	HAL_TIM_Base_MspDeInit:
 891              	.LVL100:
 892              	.LFB137:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 893              		.loc 1 385 1 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 898              		.loc 1 387 3 view .LVU325
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 899              		.loc 1 392 1 is_stmt 0 view .LVU326
 900 0000 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE137:
 904              		.section	.text.HAL_TIM_Base_DeInit,"ax",%progbits
 905              		.align	1
 906              		.global	HAL_TIM_Base_DeInit
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	HAL_TIM_Base_DeInit:
 912              	.LVL101:
 913              	.LFB135:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 914              		.loc 1 327 1 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 918              		.loc 1 327 1 is_stmt 0 view .LVU328
 919 0000 10B5     		push	{r4, lr}
 920              	.LCFI16:
 921              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFOYGRW.s 			page 149


 922              		.cfi_offset 4, -8
 923              		.cfi_offset 14, -4
 924 0002 0446     		mov	r4, r0
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 925              		.loc 1 329 3 is_stmt 1 view .LVU329
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 926              		.loc 1 331 3 view .LVU330
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 927              		.loc 1 331 15 is_stmt 0 view .LVU331
 928 0004 0223     		movs	r3, #2
 929 0006 80F83D30 		strb	r3, [r0, #61]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 930              		.loc 1 334 3 is_stmt 1 view .LVU332
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 931              		.loc 1 334 3 view .LVU333
 932 000a 0368     		ldr	r3, [r0]
 933 000c 196A     		ldr	r1, [r3, #32]
 934 000e 41F21112 		movw	r2, #4369
 935 0012 1142     		tst	r1, r2
 936 0014 08D1     		bne	.L37
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 937              		.loc 1 334 3 discriminator 1 view .LVU334
 938 0016 196A     		ldr	r1, [r3, #32]
 939 0018 40F24442 		movw	r2, #1092
 940 001c 1142     		tst	r1, r2
 941 001e 03D1     		bne	.L37
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 942              		.loc 1 334 3 discriminator 3 view .LVU335
 943 0020 1A68     		ldr	r2, [r3]
 944 0022 22F00102 		bic	r2, r2, #1
 945 0026 1A60     		str	r2, [r3]
 946              	.L37:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 947              		.loc 1 334 3 discriminator 5 view .LVU336
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 948              		.loc 1 345 3 view .LVU337
 949 0028 2046     		mov	r0, r4
 950              	.LVL102:
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 951              		.loc 1 345 3 is_stmt 0 view .LVU338
 952 002a FFF7FEFF 		bl	HAL_TIM_Base_MspDeInit
 953              	.LVL103:
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 954              		.loc 1 349 3 is_stmt 1 view .LVU339
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 955              		.loc 1 349 23 is_stmt 0 view .LVU340
 956 002e 0020     		movs	r0, #0
 957 0030 84F84600 		strb	r0, [r4, #70]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 958              		.loc 1 352 3 is_stmt 1 view .LVU341
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 959              		.loc 1 352 3 view .LVU342
 960 0034 84F83E00 		strb	r0, [r4, #62]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 961              		.loc 1 352 3 view .LVU343
 962 0038 84F83F00 		strb	r0, [r4, #63]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
ARM GAS  /tmp/ccFOYGRW.s 			page 150


 963              		.loc 1 352 3 view .LVU344
 964 003c 84F84000 		strb	r0, [r4, #64]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 965              		.loc 1 352 3 view .LVU345
 966 0040 84F84100 		strb	r0, [r4, #65]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 967              		.loc 1 352 3 view .LVU346
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 968              		.loc 1 353 3 view .LVU347
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 969              		.loc 1 353 3 view .LVU348
 970 0044 84F84200 		strb	r0, [r4, #66]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 971              		.loc 1 353 3 view .LVU349
 972 0048 84F84300 		strb	r0, [r4, #67]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 973              		.loc 1 353 3 view .LVU350
 974 004c 84F84400 		strb	r0, [r4, #68]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 975              		.loc 1 353 3 view .LVU351
 976 0050 84F84500 		strb	r0, [r4, #69]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 977              		.loc 1 353 3 view .LVU352
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 978              		.loc 1 356 3 view .LVU353
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 979              		.loc 1 356 15 is_stmt 0 view .LVU354
 980 0054 84F83D00 		strb	r0, [r4, #61]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 981              		.loc 1 359 3 is_stmt 1 view .LVU355
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 982              		.loc 1 359 3 view .LVU356
 983 0058 84F83C00 		strb	r0, [r4, #60]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 984              		.loc 1 359 3 view .LVU357
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 985              		.loc 1 361 3 view .LVU358
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 986              		.loc 1 362 1 is_stmt 0 view .LVU359
 987 005c 10BD     		pop	{r4, pc}
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 988              		.loc 1 362 1 view .LVU360
 989              		.cfi_endproc
 990              	.LFE135:
 992              		.section	.text.HAL_TIM_Base_Start,"ax",%progbits
 993              		.align	1
 994              		.global	HAL_TIM_Base_Start
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	HAL_TIM_Base_Start:
 1000              	.LVL104:
 1001              	.LFB138:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 1002              		.loc 1 401 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccFOYGRW.s 			page 151


 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1007              		.loc 1 402 3 view .LVU362
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1008              		.loc 1 405 3 view .LVU363
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1009              		.loc 1 408 3 view .LVU364
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1010              		.loc 1 408 11 is_stmt 0 view .LVU365
 1011 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1012 0004 DBB2     		uxtb	r3, r3
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1013              		.loc 1 408 6 view .LVU366
 1014 0006 012B     		cmp	r3, #1
 1015 0008 32D1     		bne	.L43
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1016              		.loc 1 414 3 is_stmt 1 view .LVU367
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1017              		.loc 1 414 15 is_stmt 0 view .LVU368
 1018 000a 0223     		movs	r3, #2
 1019 000c 80F83D30 		strb	r3, [r0, #61]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1020              		.loc 1 417 3 is_stmt 1 view .LVU369
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1021              		.loc 1 417 7 is_stmt 0 view .LVU370
 1022 0010 0368     		ldr	r3, [r0]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1023              		.loc 1 417 6 view .LVU371
 1024 0012 194A     		ldr	r2, .L45
 1025 0014 9342     		cmp	r3, r2
 1026 0016 20D0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1027              		.loc 1 417 7 discriminator 1 view .LVU372
 1028 0018 B3F1804F 		cmp	r3, #1073741824
 1029 001c 1DD0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1030              		.loc 1 417 7 discriminator 2 view .LVU373
 1031 001e A2F57C42 		sub	r2, r2, #64512
 1032 0022 9342     		cmp	r3, r2
 1033 0024 19D0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1034              		.loc 1 417 7 discriminator 3 view .LVU374
 1035 0026 02F58062 		add	r2, r2, #1024
 1036 002a 9342     		cmp	r3, r2
 1037 002c 15D0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1038              		.loc 1 417 7 discriminator 4 view .LVU375
 1039 002e 02F58062 		add	r2, r2, #1024
 1040 0032 9342     		cmp	r3, r2
 1041 0034 11D0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1042              		.loc 1 417 7 discriminator 5 view .LVU376
 1043 0036 02F57842 		add	r2, r2, #63488
 1044 003a 9342     		cmp	r3, r2
 1045 003c 0DD0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
ARM GAS  /tmp/ccFOYGRW.s 			page 152


 1046              		.loc 1 417 7 discriminator 6 view .LVU377
 1047 003e 02F57052 		add	r2, r2, #15360
 1048 0042 9342     		cmp	r3, r2
 1049 0044 09D0     		beq	.L41
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1050              		.loc 1 417 7 discriminator 7 view .LVU378
 1051 0046 A2F59432 		sub	r2, r2, #75776
 1052 004a 9342     		cmp	r3, r2
 1053 004c 05D0     		beq	.L41
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1054              		.loc 1 427 5 is_stmt 1 view .LVU379
 1055 004e 1A68     		ldr	r2, [r3]
 1056 0050 42F00102 		orr	r2, r2, #1
 1057 0054 1A60     		str	r2, [r3]
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1058              		.loc 1 431 10 is_stmt 0 view .LVU380
 1059 0056 0020     		movs	r0, #0
 1060              	.LVL105:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1061              		.loc 1 431 10 view .LVU381
 1062 0058 7047     		bx	lr
 1063              	.LVL106:
 1064              	.L41:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1065              		.loc 1 419 5 is_stmt 1 view .LVU382
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1066              		.loc 1 419 29 is_stmt 0 view .LVU383
 1067 005a 9A68     		ldr	r2, [r3, #8]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1068              		.loc 1 419 13 view .LVU384
 1069 005c 02F00702 		and	r2, r2, #7
 1070              	.LVL107:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1071              		.loc 1 420 5 is_stmt 1 view .LVU385
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1072              		.loc 1 420 8 is_stmt 0 view .LVU386
 1073 0060 062A     		cmp	r2, #6
 1074 0062 07D0     		beq	.L44
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1075              		.loc 1 422 7 is_stmt 1 view .LVU387
 1076 0064 1A68     		ldr	r2, [r3]
 1077              	.LVL108:
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1078              		.loc 1 422 7 is_stmt 0 view .LVU388
 1079 0066 42F00102 		orr	r2, r2, #1
 1080 006a 1A60     		str	r2, [r3]
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1081              		.loc 1 431 10 view .LVU389
 1082 006c 0020     		movs	r0, #0
 1083              	.LVL109:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1084              		.loc 1 431 10 view .LVU390
 1085 006e 7047     		bx	lr
 1086              	.LVL110:
 1087              	.L43:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1088              		.loc 1 410 12 view .LVU391
ARM GAS  /tmp/ccFOYGRW.s 			page 153


 1089 0070 0120     		movs	r0, #1
 1090              	.LVL111:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1091              		.loc 1 410 12 view .LVU392
 1092 0072 7047     		bx	lr
 1093              	.LVL112:
 1094              	.L44:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1095              		.loc 1 431 10 view .LVU393
 1096 0074 0020     		movs	r0, #0
 1097              	.LVL113:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1098              		.loc 1 432 1 view .LVU394
 1099 0076 7047     		bx	lr
 1100              	.L46:
 1101              		.align	2
 1102              	.L45:
 1103 0078 00000140 		.word	1073807360
 1104              		.cfi_endproc
 1105              	.LFE138:
 1107              		.section	.text.HAL_TIM_Base_Stop,"ax",%progbits
 1108              		.align	1
 1109              		.global	HAL_TIM_Base_Stop
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	HAL_TIM_Base_Stop:
 1115              	.LVL114:
 1116              	.LFB139:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 1117              		.loc 1 440 1 is_stmt 1 view -0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1122              		.loc 1 442 3 view .LVU396
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1123              		.loc 1 445 3 view .LVU397
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1124              		.loc 1 445 3 view .LVU398
 1125 0000 0368     		ldr	r3, [r0]
 1126 0002 196A     		ldr	r1, [r3, #32]
 1127 0004 41F21112 		movw	r2, #4369
 1128 0008 1142     		tst	r1, r2
 1129 000a 08D1     		bne	.L48
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1130              		.loc 1 445 3 discriminator 1 view .LVU399
 1131 000c 196A     		ldr	r1, [r3, #32]
 1132 000e 40F24442 		movw	r2, #1092
 1133 0012 1142     		tst	r1, r2
 1134 0014 03D1     		bne	.L48
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1135              		.loc 1 445 3 discriminator 3 view .LVU400
 1136 0016 1A68     		ldr	r2, [r3]
 1137 0018 22F00102 		bic	r2, r2, #1
 1138 001c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFOYGRW.s 			page 154


 1139              	.L48:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1140              		.loc 1 445 3 discriminator 5 view .LVU401
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1141              		.loc 1 448 3 view .LVU402
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1142              		.loc 1 448 15 is_stmt 0 view .LVU403
 1143 001e 0123     		movs	r3, #1
 1144 0020 80F83D30 		strb	r3, [r0, #61]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1145              		.loc 1 451 3 is_stmt 1 view .LVU404
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1146              		.loc 1 452 1 is_stmt 0 view .LVU405
 1147 0024 0020     		movs	r0, #0
 1148              	.LVL115:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1149              		.loc 1 452 1 view .LVU406
 1150 0026 7047     		bx	lr
 1151              		.cfi_endproc
 1152              	.LFE139:
 1154              		.section	.text.HAL_TIM_Base_Start_IT,"ax",%progbits
 1155              		.align	1
 1156              		.global	HAL_TIM_Base_Start_IT
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1161              	HAL_TIM_Base_Start_IT:
 1162              	.LVL116:
 1163              	.LFB140:
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 1164              		.loc 1 460 1 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              		@ link register save eliminated.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1169              		.loc 1 461 3 view .LVU408
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1170              		.loc 1 464 3 view .LVU409
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1171              		.loc 1 467 3 view .LVU410
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1172              		.loc 1 467 11 is_stmt 0 view .LVU411
 1173 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1174 0004 DBB2     		uxtb	r3, r3
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1175              		.loc 1 467 6 view .LVU412
 1176 0006 012B     		cmp	r3, #1
 1177 0008 37D1     		bne	.L53
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1178              		.loc 1 473 3 is_stmt 1 view .LVU413
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1179              		.loc 1 473 15 is_stmt 0 view .LVU414
 1180 000a 0223     		movs	r3, #2
 1181 000c 80F83D30 		strb	r3, [r0, #61]
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1182              		.loc 1 476 3 is_stmt 1 view .LVU415
ARM GAS  /tmp/ccFOYGRW.s 			page 155


 1183 0010 0268     		ldr	r2, [r0]
 1184 0012 D368     		ldr	r3, [r2, #12]
 1185 0014 43F00103 		orr	r3, r3, #1
 1186 0018 D360     		str	r3, [r2, #12]
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1187              		.loc 1 479 3 view .LVU416
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1188              		.loc 1 479 7 is_stmt 0 view .LVU417
 1189 001a 0368     		ldr	r3, [r0]
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1190              		.loc 1 479 6 view .LVU418
 1191 001c 194A     		ldr	r2, .L55
 1192 001e 9342     		cmp	r3, r2
 1193 0020 20D0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1194              		.loc 1 479 7 discriminator 1 view .LVU419
 1195 0022 B3F1804F 		cmp	r3, #1073741824
 1196 0026 1DD0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1197              		.loc 1 479 7 discriminator 2 view .LVU420
 1198 0028 A2F57C42 		sub	r2, r2, #64512
 1199 002c 9342     		cmp	r3, r2
 1200 002e 19D0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1201              		.loc 1 479 7 discriminator 3 view .LVU421
 1202 0030 02F58062 		add	r2, r2, #1024
 1203 0034 9342     		cmp	r3, r2
 1204 0036 15D0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1205              		.loc 1 479 7 discriminator 4 view .LVU422
 1206 0038 02F58062 		add	r2, r2, #1024
 1207 003c 9342     		cmp	r3, r2
 1208 003e 11D0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1209              		.loc 1 479 7 discriminator 5 view .LVU423
 1210 0040 02F57842 		add	r2, r2, #63488
 1211 0044 9342     		cmp	r3, r2
 1212 0046 0DD0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1213              		.loc 1 479 7 discriminator 6 view .LVU424
 1214 0048 02F57052 		add	r2, r2, #15360
 1215 004c 9342     		cmp	r3, r2
 1216 004e 09D0     		beq	.L51
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1217              		.loc 1 479 7 discriminator 7 view .LVU425
 1218 0050 A2F59432 		sub	r2, r2, #75776
 1219 0054 9342     		cmp	r3, r2
 1220 0056 05D0     		beq	.L51
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1221              		.loc 1 489 5 is_stmt 1 view .LVU426
 1222 0058 1A68     		ldr	r2, [r3]
 1223 005a 42F00102 		orr	r2, r2, #1
 1224 005e 1A60     		str	r2, [r3]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1225              		.loc 1 493 10 is_stmt 0 view .LVU427
 1226 0060 0020     		movs	r0, #0
 1227              	.LVL117:
ARM GAS  /tmp/ccFOYGRW.s 			page 156


 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1228              		.loc 1 493 10 view .LVU428
 1229 0062 7047     		bx	lr
 1230              	.LVL118:
 1231              	.L51:
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1232              		.loc 1 481 5 is_stmt 1 view .LVU429
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1233              		.loc 1 481 29 is_stmt 0 view .LVU430
 1234 0064 9A68     		ldr	r2, [r3, #8]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1235              		.loc 1 481 13 view .LVU431
 1236 0066 02F00702 		and	r2, r2, #7
 1237              	.LVL119:
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1238              		.loc 1 482 5 is_stmt 1 view .LVU432
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1239              		.loc 1 482 8 is_stmt 0 view .LVU433
 1240 006a 062A     		cmp	r2, #6
 1241 006c 07D0     		beq	.L54
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1242              		.loc 1 484 7 is_stmt 1 view .LVU434
 1243 006e 1A68     		ldr	r2, [r3]
 1244              	.LVL120:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1245              		.loc 1 484 7 is_stmt 0 view .LVU435
 1246 0070 42F00102 		orr	r2, r2, #1
 1247 0074 1A60     		str	r2, [r3]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1248              		.loc 1 493 10 view .LVU436
 1249 0076 0020     		movs	r0, #0
 1250              	.LVL121:
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1251              		.loc 1 493 10 view .LVU437
 1252 0078 7047     		bx	lr
 1253              	.LVL122:
 1254              	.L53:
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1255              		.loc 1 469 12 view .LVU438
 1256 007a 0120     		movs	r0, #1
 1257              	.LVL123:
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1258              		.loc 1 469 12 view .LVU439
 1259 007c 7047     		bx	lr
 1260              	.LVL124:
 1261              	.L54:
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1262              		.loc 1 493 10 view .LVU440
 1263 007e 0020     		movs	r0, #0
 1264              	.LVL125:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1265              		.loc 1 494 1 view .LVU441
 1266 0080 7047     		bx	lr
 1267              	.L56:
 1268 0082 00BF     		.align	2
 1269              	.L55:
 1270 0084 00000140 		.word	1073807360
ARM GAS  /tmp/ccFOYGRW.s 			page 157


 1271              		.cfi_endproc
 1272              	.LFE140:
 1274              		.section	.text.HAL_TIM_Base_Stop_IT,"ax",%progbits
 1275              		.align	1
 1276              		.global	HAL_TIM_Base_Stop_IT
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1281              	HAL_TIM_Base_Stop_IT:
 1282              	.LVL126:
 1283              	.LFB141:
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 1284              		.loc 1 502 1 is_stmt 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1289              		.loc 1 504 3 view .LVU443
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1290              		.loc 1 507 3 view .LVU444
 1291 0000 0268     		ldr	r2, [r0]
 1292 0002 D368     		ldr	r3, [r2, #12]
 1293 0004 23F00103 		bic	r3, r3, #1
 1294 0008 D360     		str	r3, [r2, #12]
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1295              		.loc 1 510 3 view .LVU445
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1296              		.loc 1 510 3 view .LVU446
 1297 000a 0368     		ldr	r3, [r0]
 1298 000c 196A     		ldr	r1, [r3, #32]
 1299 000e 41F21112 		movw	r2, #4369
 1300 0012 1142     		tst	r1, r2
 1301 0014 08D1     		bne	.L58
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1302              		.loc 1 510 3 discriminator 1 view .LVU447
 1303 0016 196A     		ldr	r1, [r3, #32]
 1304 0018 40F24442 		movw	r2, #1092
 1305 001c 1142     		tst	r1, r2
 1306 001e 03D1     		bne	.L58
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1307              		.loc 1 510 3 discriminator 3 view .LVU448
 1308 0020 1A68     		ldr	r2, [r3]
 1309 0022 22F00102 		bic	r2, r2, #1
 1310 0026 1A60     		str	r2, [r3]
 1311              	.L58:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1312              		.loc 1 510 3 discriminator 5 view .LVU449
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1313              		.loc 1 513 3 view .LVU450
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1314              		.loc 1 513 15 is_stmt 0 view .LVU451
 1315 0028 0123     		movs	r3, #1
 1316 002a 80F83D30 		strb	r3, [r0, #61]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1317              		.loc 1 516 3 is_stmt 1 view .LVU452
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
ARM GAS  /tmp/ccFOYGRW.s 			page 158


 1318              		.loc 1 517 1 is_stmt 0 view .LVU453
 1319 002e 0020     		movs	r0, #0
 1320              	.LVL127:
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1321              		.loc 1 517 1 view .LVU454
 1322 0030 7047     		bx	lr
 1323              		.cfi_endproc
 1324              	.LFE141:
 1326              		.section	.text.HAL_TIM_Base_Start_DMA,"ax",%progbits
 1327              		.align	1
 1328              		.global	HAL_TIM_Base_Start_DMA
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1333              	HAL_TIM_Base_Start_DMA:
 1334              	.LVL128:
 1335              	.LFB142:
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 1336              		.loc 1 527 1 is_stmt 1 view -0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   uint32_t tmpsmcr;
 1340              		.loc 1 527 1 is_stmt 0 view .LVU456
 1341 0000 38B5     		push	{r3, r4, r5, lr}
 1342              	.LCFI17:
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 3, -16
 1345              		.cfi_offset 4, -12
 1346              		.cfi_offset 5, -8
 1347              		.cfi_offset 14, -4
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1348              		.loc 1 528 3 is_stmt 1 view .LVU457
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1349              		.loc 1 531 3 view .LVU458
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1350              		.loc 1 534 3 view .LVU459
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1351              		.loc 1 534 11 is_stmt 0 view .LVU460
 1352 0002 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1353 0006 E4B2     		uxtb	r4, r4
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1354              		.loc 1 534 6 view .LVU461
 1355 0008 022C     		cmp	r4, #2
 1356 000a 54D0     		beq	.L60
 1357 000c 0546     		mov	r5, r0
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1358              		.loc 1 538 8 is_stmt 1 view .LVU462
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1359              		.loc 1 538 16 is_stmt 0 view .LVU463
 1360 000e 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1361 0012 E4B2     		uxtb	r4, r4
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1362              		.loc 1 538 11 view .LVU464
 1363 0014 012C     		cmp	r4, #1
 1364 0016 4DD1     		bne	.L63
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
ARM GAS  /tmp/ccFOYGRW.s 			page 159


 1365              		.loc 1 540 5 is_stmt 1 view .LVU465
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1366              		.loc 1 540 8 is_stmt 0 view .LVU466
 1367 0018 0029     		cmp	r1, #0
 1368 001a 4CD0     		beq	.L60
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1369              		.loc 1 540 25 discriminator 1 view .LVU467
 1370 001c 002A     		cmp	r2, #0
 1371 001e 4AD0     		beq	.L60
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1372              		.loc 1 546 7 is_stmt 1 view .LVU468
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1373              		.loc 1 546 19 is_stmt 0 view .LVU469
 1374 0020 0223     		movs	r3, #2
 1375 0022 80F83D30 		strb	r3, [r0, #61]
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 1376              		.loc 1 555 3 is_stmt 1 view .LVU470
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 1377              		.loc 1 555 13 is_stmt 0 view .LVU471
 1378 0026 036A     		ldr	r3, [r0, #32]
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 1379              		.loc 1 555 51 view .LVU472
 1380 0028 2548     		ldr	r0, .L66
 1381              	.LVL129:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 1382              		.loc 1 555 51 view .LVU473
 1383 002a D863     		str	r0, [r3, #60]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1384              		.loc 1 556 3 is_stmt 1 view .LVU474
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1385              		.loc 1 556 13 is_stmt 0 view .LVU475
 1386 002c 2B6A     		ldr	r3, [r5, #32]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1387              		.loc 1 556 55 view .LVU476
 1388 002e 2548     		ldr	r0, .L66+4
 1389 0030 1864     		str	r0, [r3, #64]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1390              		.loc 1 559 3 is_stmt 1 view .LVU477
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1391              		.loc 1 559 13 is_stmt 0 view .LVU478
 1392 0032 2B6A     		ldr	r3, [r5, #32]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1393              		.loc 1 559 52 view .LVU479
 1394 0034 2448     		ldr	r0, .L66+8
 1395 0036 D864     		str	r0, [r3, #76]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 1396              		.loc 1 562 3 is_stmt 1 view .LVU480
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 1397              		.loc 1 562 87 is_stmt 0 view .LVU481
 1398 0038 2868     		ldr	r0, [r5]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 1399              		.loc 1 562 7 view .LVU482
 1400 003a 1346     		mov	r3, r2
 1401 003c 00F12C02 		add	r2, r0, #44
 1402              	.LVL130:
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 1403              		.loc 1 562 7 view .LVU483
ARM GAS  /tmp/ccFOYGRW.s 			page 160


 1404 0040 286A     		ldr	r0, [r5, #32]
 1405 0042 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1406              	.LVL131:
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****                        Length) != HAL_OK)
 1407              		.loc 1 562 6 discriminator 1 view .LVU484
 1408 0046 0146     		mov	r1, r0
 1409 0048 A8BB     		cbnz	r0, .L60
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1410              		.loc 1 570 3 is_stmt 1 view .LVU485
 1411 004a 2A68     		ldr	r2, [r5]
 1412 004c D368     		ldr	r3, [r2, #12]
 1413 004e 43F48073 		orr	r3, r3, #256
 1414 0052 D360     		str	r3, [r2, #12]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1415              		.loc 1 573 3 view .LVU486
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1416              		.loc 1 573 7 is_stmt 0 view .LVU487
 1417 0054 2B68     		ldr	r3, [r5]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1418              		.loc 1 573 6 view .LVU488
 1419 0056 1D4A     		ldr	r2, .L66+12
 1420 0058 9342     		cmp	r3, r2
 1421 005a 20D0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1422              		.loc 1 573 7 discriminator 1 view .LVU489
 1423 005c B3F1804F 		cmp	r3, #1073741824
 1424 0060 1DD0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1425              		.loc 1 573 7 discriminator 2 view .LVU490
 1426 0062 A2F57C42 		sub	r2, r2, #64512
 1427 0066 9342     		cmp	r3, r2
 1428 0068 19D0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1429              		.loc 1 573 7 discriminator 3 view .LVU491
 1430 006a 02F58062 		add	r2, r2, #1024
 1431 006e 9342     		cmp	r3, r2
 1432 0070 15D0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1433              		.loc 1 573 7 discriminator 4 view .LVU492
 1434 0072 02F58062 		add	r2, r2, #1024
 1435 0076 9342     		cmp	r3, r2
 1436 0078 11D0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1437              		.loc 1 573 7 discriminator 5 view .LVU493
 1438 007a 02F57842 		add	r2, r2, #63488
 1439 007e 9342     		cmp	r3, r2
 1440 0080 0DD0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1441              		.loc 1 573 7 discriminator 6 view .LVU494
 1442 0082 02F57052 		add	r2, r2, #15360
 1443 0086 9342     		cmp	r3, r2
 1444 0088 09D0     		beq	.L61
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   {
 1445              		.loc 1 573 7 discriminator 7 view .LVU495
 1446 008a A2F59432 		sub	r2, r2, #75776
 1447 008e 9342     		cmp	r3, r2
 1448 0090 05D0     		beq	.L61
ARM GAS  /tmp/ccFOYGRW.s 			page 161


 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1449              		.loc 1 583 5 is_stmt 1 view .LVU496
 1450 0092 1A68     		ldr	r2, [r3]
 1451 0094 42F00102 		orr	r2, r2, #1
 1452 0098 1A60     		str	r2, [r3]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1453              		.loc 1 587 10 is_stmt 0 view .LVU497
 1454 009a 0446     		mov	r4, r0
 1455 009c 0BE0     		b	.L60
 1456              	.L61:
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1457              		.loc 1 575 5 is_stmt 1 view .LVU498
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1458              		.loc 1 575 29 is_stmt 0 view .LVU499
 1459 009e 9A68     		ldr	r2, [r3, #8]
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1460              		.loc 1 575 13 view .LVU500
 1461 00a0 02F00702 		and	r2, r2, #7
 1462              	.LVL132:
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1463              		.loc 1 576 5 is_stmt 1 view .LVU501
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     {
 1464              		.loc 1 576 8 is_stmt 0 view .LVU502
 1465 00a4 062A     		cmp	r2, #6
 1466 00a6 08D0     		beq	.L64
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1467              		.loc 1 578 7 is_stmt 1 view .LVU503
 1468 00a8 1A68     		ldr	r2, [r3]
 1469              	.LVL133:
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****     }
 1470              		.loc 1 578 7 is_stmt 0 view .LVU504
 1471 00aa 42F00102 		orr	r2, r2, #1
 1472 00ae 1A60     		str	r2, [r3]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1473              		.loc 1 587 10 view .LVU505
 1474 00b0 0C46     		mov	r4, r1
 1475 00b2 00E0     		b	.L60
 1476              	.LVL134:
 1477              	.L63:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   }
 1478              		.loc 1 551 12 view .LVU506
 1479 00b4 0124     		movs	r4, #1
 1480              	.LVL135:
 1481              	.L60:
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** 
 1482              		.loc 1 588 1 view .LVU507
 1483 00b6 2046     		mov	r0, r4
 1484 00b8 38BD     		pop	{r3, r4, r5, pc}
 1485              	.LVL136:
 1486              	.L64:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c **** }
 1487              		.loc 1 587 10 view .LVU508
 1488 00ba 0C46     		mov	r4, r1
 1489 00bc FBE7     		b	.L60
 1490              	.L67:
 1491 00be 00BF     		.align	2
 1492              	.L66:
ARM GAS  /tmp/ccFOYGRW.s 			page 162


 1493 00c0 00000000 		.word	TIM_DMAPeriodElapsedCplt
 1494 00c4 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 1495 00c8 00000000 		.word	TIM_DMAError
 1496 00cc 00000140 		.word	1073807360
 1497              		.cfi_endproc
 1498              	.LFE142:
 1500              		.section	.text.HAL_TIM_Base_Stop_DMA,"ax",%progbits
 1501              		.align	1
 1502              		.global	HAL_TIM_Base_Stop_DMA
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1507              	HAL_TIM_Base_Stop_DMA:
 1508              	.LVL137:
 1509              	.LFB143:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 1510              		.loc 1 596 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c ****   /* Check the parameters */
 1514              		.loc 1 596 1 is_stmt 0 view .LVU510
 1515 0000 10B5     		push	{r4, lr}
 1516              	.LCFI18:
 1517              		.cfi_def_cfa_offset 8
 1518           